{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"hd-wallets/","title":"HD \u94b1\u5305","text":""},{"location":"hd-wallets/#what-is-an-hd-wallet","title":"What is an HD Wallet?","text":"<p>HD wallets are hierarchical deterministic wallets proposed in BIP-32 in order to avoid the trouble of managing a bunch of private keys. HD wallets allow selective sharing on multiple keypairs (private and public keys) that are generated from a single root. The seed is represented by mnemonic code (phrase) that consists of 12 words, which makes it easier for account holders to transcribe and memorize.</p>"},{"location":"hd-wallets/#tronlink-wallets-hd-wallets","title":"TronLink Wallets - HD Wallets","text":"<p>TronLink wallets support BIP-32 and BIP-44 proposals, and generate the corresponding TRON addresses based on the BIP-44 hierarchical sub-path.</p>"},{"location":"","title":"TronLink \u5f00\u53d1\u8005\u6587\u6863\u82f1\u6587","text":"<p>\u6b22\u8fce\u4f7f\u7528 TronLink \u5f00\u53d1\u8005\u6587\u6863\uff01TronLink \u662f\u6ce2\u573a TRON \u751f\u6001\u7684\u53bb\u4e2d\u5fc3\u5316\u94b1\u5305\uff0c\u63d0\u4f9b\u5b8c\u6574\u7684\u5f00\u53d1\u8005\u5de5\u5177\u548c API\u3002</p>"},{"location":"#_1","title":"\u6587\u6863\u7ed3\u6784","text":""},{"location":"#_2","title":"\u57fa\u7840\u6587\u6863","text":"<ul> <li>\u4ecb\u7ecd - \u4e86\u89e3 TronLink \u548c\u6ce2\u573a\u751f\u6001</li> <li>HD \u94b1\u5305 - HD \u94b1\u5305\u76f8\u5173\u6587\u6863</li> </ul>"},{"location":"#_3","title":"\u79fb\u52a8\u7aef\u5f00\u53d1","text":"<ul> <li>\u8d44\u4ea7\u7ba1\u7406 - \u8d44\u4ea7\u7ba1\u7406\u529f\u80fd</li> <li>\u81ea\u5b9a\u4e49\u901a\u8bc1 - \u81ea\u5b9a\u4e49\u901a\u8bc1\u7ba1\u7406</li> <li>DeepLink - DeepLink \u96c6\u6210</li> <li>\u6253\u5f00\u94b1\u5305 - \u6253\u5f00\u94b1\u5305\u529f\u80fd</li> <li>\u6253\u5f00DApp - \u6253\u5f00DApp\u529f\u80fd</li> <li>\u767b\u9646\u6388\u6743 - \u767b\u9646\u6388\u6743\u529f\u80fd</li> <li>\u8f6c\u8d26 - \u8f6c\u8d26\u529f\u80fd</li> <li>\u4ea4\u6613\u7b7e\u540d - \u4ea4\u6613\u7b7e\u540d\u529f\u80fd</li> <li>\u6d88\u606f\u7b7e\u540d - \u6d88\u606f\u7b7e\u540d\u529f\u80fd</li> <li>\u56de\u4f20\u6d88\u606f\u7801 - \u56de\u4f20\u6d88\u606f\u7801</li> <li>DApp \u652f\u6301 - DApp \u6d4f\u89c8\u5668\u652f\u6301</li> <li>\u96c6\u6210TronLink - \u96c6\u6210TronLink</li> <li>DApp\u6d4f\u89c8\u5668 - DApp\u6d4f\u89c8\u5668</li> </ul>"},{"location":"#_4","title":"\u63d2\u4ef6\u94b1\u5305","text":"<ul> <li>\u4e3b\u52a8\u8bf7\u6c42\u529f\u80fd - \u4e3b\u52a8\u8bf7\u6c42TronLink\u63d2\u4ef6\u529f\u80fd</li> <li>\u8fde\u63a5\u7f51\u7ad9 - \u8fde\u63a5\u7f51\u7ad9</li> <li>\u6dfb\u52a0Token - \u6dfb\u52a0Token</li> <li>\u88ab\u52a8\u63a5\u6536\u6d88\u606f - \u88ab\u52a8\u63a5\u6536TronLink\u63d2\u4ef6\u7684\u6d88\u606f</li> <li>\u8d26\u6237\u6539\u53d8\u6d88\u606f - \u8d26\u6237\u6539\u53d8\u6d88\u606f</li> <li>\u7f51\u7edc\u6539\u53d8\u6d88\u606f - \u7f51\u7edc\u6539\u53d8\u6d88\u606f</li> <li>\u8fde\u63a5\u7f51\u7ad9\u6210\u529f\u6d88\u606f - \u8fde\u63a5\u7f51\u7ad9\u6210\u529f\u6d88\u606f</li> <li>\u65ad\u5f00\u8fde\u63a5\u7f51\u7ad9\u6d88\u606f - \u65ad\u5f00\u8fde\u63a5\u7f51\u7ad9\u6d88\u606f</li> <li>\u5373\u5c06\u5e9f\u5f03\u7684\u6d88\u606f - \u5373\u5c06\u5e9f\u5f03\u7684\u6d88\u606f</li> </ul>"},{"location":"#dapp","title":"DApp \u5f00\u53d1","text":"<ul> <li>\u5f00\u59cb\u5f00\u53d1 - \u5feb\u901f\u5f00\u59cb</li> <li>\u591a\u7b7e\u8f6c\u8d26 - \u591a\u7b7e\u8f6c\u8d26\u529f\u80fd</li> <li>\u6d88\u606f\u7b7e\u540d - \u6d88\u606f\u7b7e\u540d</li> <li>\u666e\u901a\u8f6c\u8d26 - \u666e\u901a\u8f6c\u8d26\u529f\u80fd</li> <li>Stake2.0 - Stake2.0 \u529f\u80fd</li> </ul>"},{"location":"#_5","title":"\u5feb\u901f\u5f00\u59cb","text":"<ol> <li>\u9009\u62e9\u4f60\u9700\u8981\u7684\u529f\u80fd\u6a21\u5757</li> <li>\u9605\u8bfb\u76f8\u5173\u6587\u6863</li> <li>\u6309\u7167\u793a\u4f8b\u4ee3\u7801\u8fdb\u884c\u96c6\u6210</li> <li>\u6d4b\u8bd5\u4f60\u7684\u5e94\u7528</li> </ol>"},{"location":"#_6","title":"\u6280\u672f\u652f\u6301","text":"<ul> <li>GitHub Issues</li> <li>\u793e\u533a\u8ba8\u8bba</li> </ul>"},{"location":"introduction/","title":"\u4ecb\u7ecd","text":"<p>TRON is a robust blockchain ecosystem designed and developed by blockchain developers all over the world, which follows the philosophy of \"Decentralize the Web\".</p> <p>TronLink is a decentralized wallet that connects the DApps running on the TRON ecosystem. It ensures user\u2019s data security through local storage of the private key and multi-layer algorithm encryption. In order to serve users worldwide, TronLink supports TRX, TRC-10, TRC-20, and TRC-721 tokens. Additionally, it offers a secure DApp explorer that facilitates the operation of Tron DApps.</p>"},{"location":"dapp/getting-started/","title":"Start Developing","text":"<p>This document will guide you to connect your DApp with the TronLink application in the easiest way. After the DApp is loaded, TronLink will inject the \u201cwindow.tronLink\u201d object into it.</p> <ol> <li> <p>A user who has connected to this DApp can directly get tronLink.tronWeb.</p> </li> <li> <p>If the user has not been connected to this DApp before, a request can be invoked to establish the connection before getting tronLink.tronWeb.</p> </li> </ol> <pre><code>    async function getTronWeb() {\n      let tronWeb;\n      if (window.tronLink.ready) {\n        tronWeb = tronLink.tronWeb;\n      } else {\n        const res = await tronLink.request({ method: 'tron_requestAccounts' });\n        if (res.code === 200) {\n          tronWeb = tronLink.tronWeb;\n        }\n      }\n      return tronWeb;\n    }\n</code></pre> <p>After getting the tronWeb instance, you can perform on-chain interactive actions such as signing transfers, multi-signature transactions, and messages. For use cases of the tronWeb instance, please refer to the following document: https://tronweb.network/docu/docs/intro/</p> <p>Reference: https://developers.tron.network/docs/introduction</p>"},{"location":"dapp/","title":"DApp \u5f00\u53d1\u6307\u5357","text":"<p>TronLink \u4e3a DApp \u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u5f00\u53d1\u5de5\u5177\u548c API\uff0c\u652f\u6301\u591a\u7b7e\u8f6c\u8d26\u3001\u6d88\u606f\u7b7e\u540d\u3001\u666e\u901a\u8f6c\u8d26\u548c Stake2.0 \u7b49\u529f\u80fd\u3002</p>"},{"location":"dapp/#_1","title":"\u4e3b\u8981\u529f\u80fd","text":""},{"location":"dapp/#_2","title":"\u57fa\u7840\u529f\u80fd","text":"<ul> <li>\u5f00\u59cb\u5f00\u53d1 - DApp \u5f00\u53d1\u5feb\u901f\u5f00\u59cb\u6307\u5357</li> <li>\u666e\u901a\u8f6c\u8d26 - \u57fa\u672c\u7684\u8f6c\u8d26\u529f\u80fd</li> </ul>"},{"location":"dapp/#_3","title":"\u9ad8\u7ea7\u529f\u80fd","text":"<ul> <li>\u591a\u7b7e\u8f6c\u8d26 - \u591a\u7b7e\u8f6c\u8d26\u529f\u80fd\u5b9e\u73b0</li> <li>\u6d88\u606f\u7b7e\u540d - \u6d88\u606f\u7b7e\u540d\u529f\u80fd</li> <li>Stake2.0 - Stake2.0 \u529f\u80fd\u96c6\u6210</li> </ul>"},{"location":"dapp/#_4","title":"\u5f00\u53d1\u6d41\u7a0b","text":""},{"location":"dapp/#1","title":"1. \u73af\u5883\u51c6\u5907","text":"<ul> <li>\u5b89\u88c5 TronLink \u94b1\u5305</li> <li>\u914d\u7f6e\u5f00\u53d1\u73af\u5883</li> <li>\u51c6\u5907\u6d4b\u8bd5\u7f51\u7edc</li> </ul>"},{"location":"dapp/#2","title":"2. \u57fa\u7840\u96c6\u6210","text":"<ul> <li>\u6309\u7167 \u5f00\u59cb\u5f00\u53d1 \u8fdb\u884c\u57fa\u7840\u96c6\u6210</li> <li>\u5b9e\u73b0\u57fa\u672c\u7684\u8f6c\u8d26\u529f\u80fd</li> <li>\u6d4b\u8bd5\u57fa\u7840\u529f\u80fd</li> </ul>"},{"location":"dapp/#3","title":"3. \u9ad8\u7ea7\u529f\u80fd","text":"<ul> <li>\u6839\u636e\u9700\u6c42\u96c6\u6210\u591a\u7b7e\u8f6c\u8d26</li> <li>\u5b9e\u73b0\u6d88\u606f\u7b7e\u540d\u529f\u80fd</li> <li>\u96c6\u6210 Stake2.0 \u529f\u80fd</li> </ul>"},{"location":"dapp/#4","title":"4. \u6d4b\u8bd5\u548c\u90e8\u7f72","text":"<ul> <li>\u5168\u9762\u6d4b\u8bd5\u6240\u6709\u529f\u80fd</li> <li>\u4f18\u5316\u7528\u6237\u4f53\u9a8c</li> <li>\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883</li> </ul>"},{"location":"dapp/#_5","title":"\u6700\u4f73\u5b9e\u8df5","text":"<ul> <li>\u59cb\u7ec8\u5728\u6d4b\u8bd5\u7f51\u7edc\u8fdb\u884c\u5145\u5206\u6d4b\u8bd5</li> <li>\u5b9e\u73b0\u9519\u8bef\u5904\u7406\u548c\u7528\u6237\u63d0\u793a</li> <li>\u9075\u5faa\u5b89\u5168\u6700\u4f73\u5b9e\u8df5</li> <li>\u63d0\u4f9b\u6e05\u6670\u7684\u7528\u6237\u754c\u9762\u548c\u64cd\u4f5c\u6307\u5f15</li> </ul>"},{"location":"dapp/#_6","title":"\u6280\u672f\u652f\u6301","text":"<ul> <li>\u53c2\u8003\u76f8\u5173\u6587\u6863\u8fdb\u884c\u5f00\u53d1</li> <li>\u52a0\u5165\u5f00\u53d1\u8005\u793e\u533a\u83b7\u53d6\u5e2e\u52a9</li> <li>\u8054\u7cfb\u6280\u672f\u652f\u6301\u56e2\u961f\u89e3\u51b3\u6280\u672f\u95ee\u9898</li> </ul>"},{"location":"dapp/#_7","title":"\u793a\u4f8b\u4ee3\u7801","text":"<p>\u6bcf\u4e2a\u529f\u80fd\u6a21\u5757\u90fd\u63d0\u4f9b\u4e86\u8be6\u7ec6\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u76f4\u63a5\u53c2\u8003\u4f7f\u7528\u3002 </p>"},{"location":"dapp/message-signing/","title":"Message Signature","text":"<p>Overview</p> <p>DApp requires users to sign a hex message. The signed message will be forwarded to the back-end to verify whether a user's login is legitimate.</p> <p>Prerequisite</p> <p>The DApp sends a request asking the user to connect the wallet to the website, and the user approves to the connection.</p> <p>Specification</p> <p>Example</p> <p>Copy</p> <pre><code>if (window.tronLink.ready) {\n  const tronweb = tronLink.tronWeb;\n  try {\n    const message = \"0x1e\"; // any hex string\n    const signedString = await tronweb.trx.sign(message);\n  } catch (e) {}\n}\n</code></pre> <p>Parameters</p> <p>\u201ctronLink.tronWeb.trx.sign\u201d accepts a hexadecimal string as the parameter. The string represents the content to be signed.</p> <p>Returns</p> <p>If the user chooses to sign in the pop-up window, the DApp will get the signed hexadecimal string. For example:</p> <pre><code>    0xaa302ca153b10dff25b5f00a7e2f603c5916b8f6d78cdaf2122e24cab56ad39a79f60ff3916dde9761baaadea439b567475dde183ee3f8530b4cc76082b29c341c\n</code></pre> <p>If an error occurs, the following information will be returned:</p> <pre><code>\n    Uncaught (in promise) Invalid transaction provided\n</code></pre> <p>Interaction</p> <p>When \u201ctronweb.trx.sign(message);\u201d is executed, a pop-up window will show in the TronLink wallet asking the user to confirm, as shown below. The message content will be in hex: </p> <p>If the user chooses \u201cReject\u201d in the pop-up window, an exception will be thrown, which the developer can catch for further processing.</p>"},{"location":"dapp/multi-sign-transfer/","title":"Multi-Signature Transfer","text":"<p>Overview</p> <p>For this section, you may refer to General Transfer</p> <p>Specification</p> <p>Example</p> <pre><code>    if (window.tronLink.ready) {\n      const tronweb = tronLink.tronWeb;\n      const toAddress = \"TRKb2nAnCBfwxnLxgoKJro6VbyA6QmsuXq\";\n      const activePermissionId = 2;\n      const tx = await tronweb.transactionBuilder.sendTrx(\n        toAddress, 10,\n        { permissionId: activePermissionId}\n      ); // step 1\n      try {\n        const signedTx = await tronweb.trx.multiSign(tx, undefined, activePermissionId); // step 2\n        await tronweb.trx.sendRawTransaction(signedTx); // step 3\n      } catch (e) {}\n    }\n</code></pre> <p>If the user chooses \u201cReject\u201d in the pop-up window, an exception will be thrown, which the developer can catch for further processing. If the user chooses \u201cSign\u201d in the pop-up window, the DApp receives and broadcasts the signed transaction.</p>"},{"location":"dapp/stake2/","title":"Stake2.0","text":"<p>When generating stake 2.0 transactions for DApps, for transactions of the <code>DelegateResourceContract</code> or <code>UnDelegateResourceContract</code> type, in order to display the estimated results during signature using the Tronlink extension, it is necessary to add the \"__options\" field to the transaction body.</p> <p>Inside \"__options\", there are two values: estimatedBandwidth and estimatedEnergy, which correspond to the estimated energy and bandwidth of the delegate and reclaim operations, respectively.</p> <p>When generating stake 2.0 transactions using a non-tronlink extension injected tronweb, in order to display the corresponding type of resource for <code>DelegateResourceContract</code> or <code>UnDelegateResourceContract</code> type transactions during signature, the \"__resource\" field needs to be added to the transaction body. (Adding \u201cresource\u201d is only necessary for tronWeb that is not injected by a tronlink extension. TronWeb that is injected by tronlink extension does not require.)</p> <p>The \"__resource\" field corresponds to the values \"BANDWIDTH\" and \"ENERGY\".</p> <p></p> <p>For example:</p> <pre><code>    const transaction = await tronWeb.transactionBuilder.delegateResource(10e6, 'receiverAddress', 'BANDWIDTH', 'ownerAddress', false);\n    transaction.raw_data.contract[0].parameter.value.resource = \"BANDWIDTH\"\n    transaction.__options = {\"estimatedBandwidth\": 1}\n</code></pre> <p>The specific calculation logic of estimatedEnergy and estimatedBandwidth can be found in the last chapter of the \"Stake 2.0 Adaptation FAQ\": \"How to convert resource share to amount?\"</p>"},{"location":"dapp/transfer/","title":"General Transfer","text":"<p>Overview</p> <p>DApp requires users to initiate a TRX transfer.</p> <p>Prerequisite</p> <p>The DApp developer completes the request to connect to the website, and the user approves to the connection. The DApp sends a request asking the user to connect the wallet to the website, and the user approves to the connection.</p> <p>It takes 3 steps to initiate a transfer on the TRON network:</p> <ol> <li> <p>Create a transfer transaction</p> </li> <li> <p>Sign the transaction</p> </li> <li> <p>Broadcast the signed transaction</p> </li> </ol> <p>In this process, Step 2 requires TronLink while both Step 1 and 3 happen on tronWeb.</p> <p>Specification</p> <p>Example</p> <pre><code>\n    if (window.tronLink.ready) {\n      const tronweb = tronLink.tronWeb;\n      const fromAddress = tronweb.defaultAddress.base58;\n      const toAddress = \"TAHQdDiZajMMP26STUnfsiRMNyXdxAJakZ\";\n      const tx = await tronweb.transactionBuilder.sendTrx(toAddress, 10, fromAddress); // Step1\n      try {\n        const signedTx = await tronweb.trx.sign(tx); // Step2\n        await tronweb.trx.sendRawTransaction(signedTx); // Step3\n      } catch (e) {\n        // error handling\n      }\n    }\n</code></pre> <p>When \u201cawait tronweb.trx.sign(tx);\u201d is executed, a pop-up window will show in the TronLink wallet asking the user to confirm, as shown below: </p> <p>If the user chooses on \u201cReject\u201d in the pop-up window, an exception will be thrown, which the developer can catch for further processing.</p> <p>If the user chooses \u201cSign\u201d in the pop-up window, the DApp receives and broadcasts the signed transaction.</p>"},{"location":"mobile/asset-management/","title":"Asset Management","text":"<p>Custom Token</p>"},{"location":"mobile/dapp-support/","title":"DApp Support","text":"<p>TronLink Integration DApp Explorer</p>"},{"location":"mobile/deeplink/","title":"DeepLink","text":"<p>DApps and H5 pages can launch the TronLink App to open the wallet, log in, make transfers, sign transactions, open DApps in the wallet, and more via DeepLink.</p> <p></p> <p>Process Flowchart</p> <p>Please be aware that only dApps that have been added to the whitelist will be able to establish a successful connection with TronLink. Kindly fill out the whitelist request form here: Start</p>"},{"location":"mobile/","title":"\u79fb\u52a8\u7aef\u5f00\u53d1","text":"<p>TronLink \u79fb\u52a8\u7aef\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u5f00\u53d1\u8005\u96c6\u6210\u65b9\u6848\uff0c\u5305\u62ec\u8d44\u4ea7\u7ba1\u7406\u3001DeepLink \u96c6\u6210\u548c DApp \u6d4f\u89c8\u5668\u652f\u6301\u3002</p>"},{"location":"mobile/#_2","title":"\u4e3b\u8981\u529f\u80fd","text":""},{"location":"mobile/#_3","title":"\u8d44\u4ea7\u7ba1\u7406","text":"<ul> <li>\u8d44\u4ea7\u7ba1\u7406\u6982\u8ff0 - \u4e86\u89e3\u5982\u4f55\u5728\u79fb\u52a8\u7aef\u7ba1\u7406\u8d44\u4ea7</li> <li>\u81ea\u5b9a\u4e49\u901a\u8bc1 - \u6dfb\u52a0\u548c\u7ba1\u7406\u81ea\u5b9a\u4e49\u901a\u8bc1</li> </ul>"},{"location":"mobile/#deeplink","title":"DeepLink \u96c6\u6210","text":"<ul> <li>DeepLink \u6982\u8ff0 - DeepLink \u529f\u80fd\u603b\u89c8</li> <li>\u6253\u5f00\u94b1\u5305 - \u901a\u8fc7 DeepLink \u6253\u5f00\u94b1\u5305</li> <li>\u6253\u5f00DApp - \u901a\u8fc7 DeepLink \u6253\u5f00 DApp</li> <li>\u767b\u9646\u6388\u6743 - \u7528\u6237\u767b\u5f55\u548c\u6388\u6743</li> <li>\u8f6c\u8d26 - \u901a\u8fc7 DeepLink \u8fdb\u884c\u8f6c\u8d26</li> <li>\u4ea4\u6613\u7b7e\u540d - \u4ea4\u6613\u7b7e\u540d\u529f\u80fd</li> <li>\u6d88\u606f\u7b7e\u540d - \u6d88\u606f\u7b7e\u540d\u529f\u80fd</li> <li>\u56de\u4f20\u6d88\u606f\u7801 - \u56de\u4f20\u6d88\u606f\u7801\u8bf4\u660e</li> </ul>"},{"location":"mobile/#dapp","title":"DApp \u652f\u6301","text":"<ul> <li>DApp \u652f\u6301\u6982\u8ff0 - DApp \u96c6\u6210\u603b\u89c8</li> <li>\u96c6\u6210TronLink - \u5982\u4f55\u96c6\u6210 TronLink</li> <li>DApp\u6d4f\u89c8\u5668 - DApp \u6d4f\u89c8\u5668\u529f\u80fd</li> </ul>"},{"location":"mobile/#_4","title":"\u5feb\u901f\u5f00\u59cb","text":"<ol> <li>\u9605\u8bfb DeepLink \u6982\u8ff0 \u4e86\u89e3\u57fa\u672c\u6982\u5ff5</li> <li>\u6309\u7167 \u96c6\u6210TronLink \u8fdb\u884c\u96c6\u6210</li> <li>\u6d4b\u8bd5\u5404\u79cd\u529f\u80fd\uff0c\u786e\u4fdd\u6b63\u5e38\u5de5\u4f5c</li> <li>\u53c2\u8003\u793a\u4f8b\u4ee3\u7801\u8fdb\u884c\u5f00\u53d1</li> </ol>"},{"location":"mobile/#_5","title":"\u6280\u672f\u652f\u6301","text":"<p>\u5982\u6709\u95ee\u9898\uff0c\u8bf7\u53c2\u8003\u76f8\u5173\u6587\u6863\u6216\u8054\u7cfb\u6280\u672f\u652f\u6301\u56e2\u961f\u3002 </p>"},{"location":"mobile/asset-management/custom-tokens/","title":"Custom Token","text":""},{"location":"mobile/asset-management/custom-tokens/#what-is-custom-token","title":"What is Custom Token?","text":"<p>Users can manually add TRC-20 and TRC-721 assets that are not recorded as tokens on TronScan as custom tokens in TronLink, which helps users search and manage their token assets more easily.</p>"},{"location":"mobile/asset-management/custom-tokens/#add-custom-token","title":"Add Custom Token","text":"<p>Add: Add tokens in TronLink App: Home --&gt; My Assets --&gt; Add Custom Token</p> <p>Possible limitations: Certain TronLink features, such as \"transfer\" and \"approve,\" may be unavailable when custom tokens are added in TronLink. This is because certain ABI in the contract code (e.g., transfer, approve, etc.) are not identified. TronLink will notify users when such cases occur.</p> <p>Synchronization with TronScan: If the custom token has already been recorded on TronScan, Tronlink will notify the user to synchronize token information with TronScan; once done, the custom token will adopt the corresponding token information on TronScan.</p>"},{"location":"mobile/dapp-support/dapp-browser/","title":"DApp Explorer","text":""},{"location":"mobile/dapp-support/dapp-browser/#basic-function","title":"Basic Function","text":"<p>The DApp Explorer allows Tron DApps to run and automatically injects tronWeb and TronLink objects.</p>"},{"location":"mobile/dapp-support/dapp-browser/#extension","title":"Extension","text":"<p>Tron DApp running in the DApp Explorer injects iTron objects automatically to offer customized App service.</p>"},{"location":"mobile/dapp-support/dapp-browser/#change-screen-orientation","title":"Change screen orientation","text":"<pre><code>  // url: DApp page url\n  // screenModel: \"1\" -&gt; vertical;\"2\" -&gt; horizontal\n  void setScreenModel(String url, String screenModel)\n</code></pre>"},{"location":"mobile/dapp-support/integrate-tronlink/","title":"TronLink Integration","text":"<p>TronLink injects a version of TronWeb into the DApp that runs in TronLink's DApp Explorer. This enables the DApp to interact with TronLink DApps and the TRON network.</p> <p>Details: Go to DApp</p>"},{"location":"mobile/deeplink/callback-codes/","title":"Result Code","text":"0 success 10001 Incorrect JSON format 10002 Missing Action 10003 Unknown Action 10004 Missing ActionId 10005 Incorrect DApp URL format 10006 Incorrect CallbackUrl format 10007 Empty DApp name 10008 Version number not supported 10009 Current network not supported 10010 The URL is not supported to open TronLink 10011 Unknown SignType 10012 Incorrect Transaction format 10013 Incorrect Method format 10014 Incorrect Message format 10015 Incorrect toAddress 10016 No wallet created in TronLink 10017 Incorrect fromAddress 10018 Incorrect contactAddress 10019 Incorrect chainId 10020 Incorrect amount 10021 The initiating address does not match the current wallet 10022 incorrect loginAddress 10023 System contract not support 10024 Incorrect tokenId 10025 TokenId &amp; Contract address should not be exist together 300 Transaction canceled 301 Transaction executed in TronLink 302 Broadcast failure - returned with incorrect info -1 Unknown reason"},{"location":"mobile/deeplink/login-auth/","title":"Login by TronLink","text":"<pre><code>    // Tronlink-v4.11.0\n    // Link\n    &lt;a href='tronlinkoutside://pull.activity?param={}'&gt;Login/Request Address&lt;/a&gt;\n</code></pre> <pre><code>\n    //  The parameter of param is the protocol data in json format\n    //  Note: json.toString needs to be encoded with urlencode\n    {\n      \"url\": \"https://justlend.org/#/home\",\n      \"callbackUrl\": \"http://xxx/api/tron/v1/callback\",\n      \"dappIcon\": \"https://test/icon.png\",\n      \"dappName\": \"Test demo\",\n      \"protocol\": \"TronLink\",\n      \"version\": \"1.0\",\n      \"chainId\": \"0x2b6653dc\",\n      \"action\": \"login\",\n      \"actionId\": \"e5471a9c-b0f1-418b-8634-3de60d68a288\"\n    }\n</code></pre> <pre><code>    {\n      \"actionId\": \"e5471a9c-b0f1-418b-8634-3de60d68a288\",\n      \"address\": \"TSPrmJetAMo6S6RxMd4tswzeRCFVegBNig\",\n      \"code\": 0,\n      \"id\": 1780812177,\n      \"message\": \"success\"\n    }\n</code></pre>"},{"location":"mobile/deeplink/message-signing/","title":"\u6d88\u606f\u7b7e\u540d","text":"<pre><code>    // Tronlink-v4.11.0\n    &lt;a href='tronlinkoutside://pull.activity?param={}'&gt;Sign message&lt;/a&gt;\n</code></pre> <pre><code>    // request parameter\n    {\n      \"url\": \"https://justlend.org/#/home\",\n      \"callbackUrl\": \"http://3.12.131.175:7777/api/tron/v1/callback\",\n      \"dappIcon\": \"https://test/icon.png\",\n      \"dappName\": \"Test demo\",\n      \"protocol\": \"TronLink\",\n      \"version\": \"1.0\",\n      \"chainId\": \"0x2b6653dc\",\n      \"loginAddress\": \"TSPrmJetAMo6S6RxMd4tswzeRCFVegBNig\",\n      \"signType\": \"signStr\",\n      \"message\": \"abc\",\n      \"action\": \"sign\",\n      \"actionId\": \"50554861-4861-41c4-adf3-abf36213f843\"\n    }\n</code></pre> <pre><code>    // callback parameter\n    {\n      \"actionId\": \"50554861-4861-41c4-adf3-abf36213f843\",\n      \"code\": 0,\n      \"id\": 2001871012,\n      \"message\": \"success\",\n      \"signedData\": \"0xffcac5731d9f70a58e5126f44c34b9356ccb9bef53331e33ddab84bb829adc1b77df24362348f8d46e506b489b4af4496600799b173e708faf1b9db99da9d13c1b\"\n    }\n</code></pre>"},{"location":"mobile/deeplink/open-dapp/","title":"Open DApp","text":""},{"location":"mobile/deeplink/open-dapp/#use-deeplink-to-launch-tronlink-and-open-dapp-in-the-dapp-explorer","title":"Use DeepLink to launch TronLink and open DApp in the DApp Explorer","text":"<pre><code>    // Tronlink-v4.10.0\n    // Link\n    &lt;a href='tronlinkoutside://pull.activity?param={}'&gt;Open DApp&lt;/a&gt;\n</code></pre> <pre><code>\n    //  The parameter of param is the protocol data in json format\n    //  Note: json.toString needs to be encoded with urlencode\n    {\n        \"url\": \"https://www.tronlink.org/\", //target DApp\n        \"action\": \"open\",\n        \"protocol\": \"tronlink\",\n        \"version\": \"1.0\"\n    }\n</code></pre>"},{"location":"mobile/deeplink/open-wallet/","title":"Open Wallet","text":""},{"location":"mobile/deeplink/open-wallet/#launch-tronlink-wallet-via-deeplink","title":"Launch TronLink wallet via DeepLink","text":"<pre><code>    // Tronlink-v4.10.0\n    // Link\n    &lt;a href='tronlinkoutside://pull.activity?param={}'&gt;Open Tronlink&lt;/a&gt;\n</code></pre> <pre><code>    // The parameter of param is the protocol data in json format\n    // Note: json.toString needs to be encoded with urlencode\n    {\n        \"action\": \"open\",\n        \"protocol\": \"tronlink\",\n        \"version\": \"1.0\"\n    }\n</code></pre>"},{"location":"mobile/deeplink/transaction-signing/","title":"Sign Transaction","text":"<pre><code>  // Tronlink-v4.11.0\n  // Link\n  &lt;a href='tronlinkoutside://pull.activity?param={}'&gt;Sign transaction&lt;/a&gt;\n</code></pre> <pre><code>  // request parameter\n  {\n    \"url\": \"https://justlend.org/#/home\",\n    \"callbackUrl\": \"http://3.12.131.175:7777/api/tron/v1/callback\",\n    \"dappIcon\": \"https://test/icon.png\",\n    \"dappName\": \"Test demo\",\n    \"protocol\": \"TronLink\",\n    \"version\": \"1.0\",\n    \"chainId\": \"0x2b6653dc\",\n    \"action\": \"sign\",\n    \"loginAddress\": \"TSPrmJetAMo6S6RxMd4tswzeRCFVegBNig\",\n    \"method\": \"transfer(address,uint256)\",\n    \"signType\": \"signTransaction\",\n    \"data\": \"{\\\"visible\\\":false,\\\"txID\\\":\\\"dcfaf2c2d75d91994f9a23623e905eaa7d74bc804fa5821640111ada3441376a\\\",\\\"raw_data\\\":{\\\"contract\\\":[{\\\"parameter\\\":{\\\"value\\\":{\\\"data\\\":\\\"a9059cbb000000000000000000000000ed87a3ae2bf2ab8b95486a23f224487ad75c60200000000000000000000000000000000000000000000000000000000000000014\\\",\\\"owner_address\\\":\\\"41b42b84bad413dde093e27d01bb02ed9eede52c43\\\",\\\"contract_address\\\":\\\"41eca9bc828a3005b9a3b909f2cc5c2a54794de05f\\\"},\\\"type_url\\\":\\\"type.googleapis.com/protocol.TriggerSmartContract\\\"},\\\"type\\\":\\\"TriggerSmartContract\\\"}],\\\"ref_block_bytes\\\":\\\"84e1\\\",\\\"ref_block_hash\\\":\\\"1731d6450e11a03f\\\",\\\"expiration\\\":1670168865000,\\\"fee_limit\\\":100000000,\\\"timestamp\\\":1670168805340},\\\"raw_data_hex\\\":\\\"0a0284e122081731d6450e11a03f40e8d1c9eecd305aae01081f12a9010a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412740a1541b42b84bad413dde093e27d01bb02ed9eede52c43121541eca9bc828a3005b9a3b909f2cc5c2a54794de05f2244a9059cbb000000000000000000000000ed87a3ae2bf2ab8b95486a23f224487ad75c6020000000000000000000000000000000000000000000000000000000000000001470dcffc5eecd30900180c2d72f\\\"}\",\n    \"actionId\": \"64fcdb39-2cfa-47f2-85bd-d7e8409809ed\"\n  }\n</code></pre> <pre><code>  // callback parameter\n  {\n    \"actionId\": \"f5d9791a-c774-4684-805a-83784c0c86ff\",\n    \"code\": 0,\n    \"id\": -799302342,\n    \"message\": \"success\",\n    \"successful\": true,\n    \"transactionHash\": \"2fc49e560f648e5ecb455955d8778267ec1f257436425f62393b632c9a7a55ad\"\n  }\n</code></pre>"},{"location":"mobile/deeplink/transfer/","title":"Transfer","text":"<pre><code>  // Tronlink-v4.11.0\n  // Link\n  &lt;a href='tronlinkoutside://pull.activity?param={}'&gt;Transfer&lt;/a&gt;\n</code></pre> <pre><code>  {\n    \"url\": \"https://justlend.org/#/home\",\n    \"callbackUrl\": \"http://3.12.131.175:7777/api/tron/v1/callback\",\n    \"dappIcon\": \"https://test/icon.png\",\n    \"dappName\": \"Test demo\",\n    \"protocol\": \"TronLink\",\n    \"version\": \"1.0\",\n    \"chainId\": \"0x2b6653dc\",\n    \"memo\": \"Reward\",\n    \"from\": \"TSPrmJetAMo6S6RxMd4tswzeRCFVegBNig\",\n    \"to\": \"TXd9duqtcyyj4pBCKvXKNqmazxxDw5SdBa\",\n    \"loginAddress\": \"TSPrmJetAMo6S6RxMd4tswzeRCFVegBNig\",\n    \"tokenId\": \"0\",\n    \"contract\": \"\",\n    \"amount\": \"20\",\n    \"action\": \"transfer\",\n    \"actionId\": \"408170fc-7919-4459-be5e-05a9d4b4065e\"\n  }\n</code></pre> <pre><code>  {\n    \"actionId\": \"099482f0-ee12-4703-bb7b-2e9d8c7c61a1\",\n    \"code\": 0,\n    \"id\": 1142367107,\n    \"message\": \"success\",\n    \"transactionHash\": \"e8ffe9b92c771e66999732b810bf2493be389464191040d8666a26dc449fa5f0\"\n  }\n</code></pre>"},{"location":"plugin-wallet/active-requests/","title":"\u4e3b\u52a8\u8bf7\u6c42TronLink\u63d2\u4ef6\u529f\u80fd","text":"<p>\u8fde\u63a5\u7f51\u7ad9\u6dfb\u52a0Token</p> <p>PreviousDApp\u6d4f\u89c8\u5668Next\u8fde\u63a5\u7f51\u7ad9</p>"},{"location":"plugin-wallet/","title":"\u63d2\u4ef6\u94b1\u5305\u5f00\u53d1","text":"<p>TronLink \u63d2\u4ef6\u94b1\u5305\u4e3a\u6d4f\u89c8\u5668\u73af\u5883\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u5f00\u53d1\u8005\u96c6\u6210\u65b9\u6848\uff0c\u652f\u6301\u4e3b\u52a8\u8bf7\u6c42\u529f\u80fd\u548c\u88ab\u52a8\u6d88\u606f\u63a5\u6536\u3002</p>"},{"location":"plugin-wallet/#_2","title":"\u4e3b\u8981\u529f\u80fd","text":""},{"location":"plugin-wallet/#_3","title":"\u4e3b\u52a8\u8bf7\u6c42\u529f\u80fd","text":"<ul> <li>\u4e3b\u52a8\u8bf7\u6c42\u6982\u8ff0 - \u4e3b\u52a8\u8bf7\u6c42\u529f\u80fd\u603b\u89c8</li> <li>\u8fde\u63a5\u7f51\u7ad9 - \u8fde\u63a5\u7f51\u7ad9\u529f\u80fd</li> <li>\u6dfb\u52a0Token - \u6dfb\u52a0 Token \u529f\u80fd</li> </ul>"},{"location":"plugin-wallet/#_4","title":"\u88ab\u52a8\u63a5\u6536\u6d88\u606f","text":"<ul> <li>\u88ab\u52a8\u6d88\u606f\u6982\u8ff0 - \u88ab\u52a8\u63a5\u6536\u6d88\u606f\u603b\u89c8</li> <li>\u8d26\u6237\u6539\u53d8\u6d88\u606f - \u8d26\u6237\u6539\u53d8\u6d88\u606f\u5904\u7406</li> <li>\u7f51\u7edc\u6539\u53d8\u6d88\u606f - \u7f51\u7edc\u6539\u53d8\u6d88\u606f\u5904\u7406</li> <li>\u8fde\u63a5\u7f51\u7ad9\u6210\u529f\u6d88\u606f - \u8fde\u63a5\u6210\u529f\u6d88\u606f\u5904\u7406</li> <li>\u65ad\u5f00\u8fde\u63a5\u7f51\u7ad9\u6d88\u606f - \u65ad\u5f00\u8fde\u63a5\u6d88\u606f\u5904\u7406</li> <li>\u5373\u5c06\u5e9f\u5f03\u7684\u6d88\u606f - \u5373\u5c06\u5e9f\u5f03\u7684\u6d88\u606f\u8bf4\u660e</li> </ul>"},{"location":"plugin-wallet/#_5","title":"\u5feb\u901f\u5f00\u59cb","text":"<ol> <li>\u9605\u8bfb \u4e3b\u52a8\u8bf7\u6c42\u6982\u8ff0 \u4e86\u89e3\u57fa\u672c\u6982\u5ff5</li> <li>\u6309\u7167 \u8fde\u63a5\u7f51\u7ad9 \u8fdb\u884c\u96c6\u6210</li> <li>\u5b9e\u73b0 \u88ab\u52a8\u6d88\u606f\u5904\u7406 \u529f\u80fd</li> <li>\u6d4b\u8bd5\u5404\u79cd\u529f\u80fd\uff0c\u786e\u4fdd\u6b63\u5e38\u5de5\u4f5c</li> </ol>"},{"location":"plugin-wallet/#_6","title":"\u5f00\u53d1\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u786e\u4fdd\u6b63\u786e\u5904\u7406\u6240\u6709\u6d88\u606f\u7c7b\u578b</li> <li>\u6ce8\u610f\u5373\u5c06\u5e9f\u5f03\u7684\u6d88\u606f\uff0c\u53ca\u65f6\u66f4\u65b0\u4ee3\u7801</li> <li>\u9075\u5faa\u5b89\u5168\u6700\u4f73\u5b9e\u8df5</li> <li>\u6d4b\u8bd5\u4e0d\u540c\u7f51\u7edc\u73af\u5883\u4e0b\u7684\u517c\u5bb9\u6027</li> </ul>"},{"location":"plugin-wallet/#_7","title":"\u6280\u672f\u652f\u6301","text":"<p>\u5982\u6709\u95ee\u9898\uff0c\u8bf7\u53c2\u8003\u76f8\u5173\u6587\u6863\u6216\u8054\u7cfb\u6280\u672f\u652f\u6301\u56e2\u961f\u3002 </p>"},{"location":"plugin-wallet/passive-messages/","title":"Receive messages from TronLink","text":"<p>The message is sent using \"window.postMessage\", and the content received by the Dapp is a MessageEvent.You can refer to MDN documentation of MessageEvent.</p>"},{"location":"plugin-wallet/active-requests/add-token/","title":"Add Token","text":"<p>Overview</p> <p>Buttons on DApps allow users to directly add the specified tokens to the asset list on their TronLink user extension.</p> <p>Specification</p> <p>Example</p> <pre><code>    const res = await tronWeb.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'TRC20',\n        options: {\n          address: 'TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t'\n        }\n      },\n    });\n</code></pre> <p>Parameters</p> <pre><code>\n    interface WatchAssetParams {\n      type: 'trc10' | 'trc20' | 'trc721';\n      options: {\n        address: string;\n        symbol?: string;\n        decimals?: number;\n        image?: string;\n      }\n    }\n</code></pre> <ul> <li> <p>method: wallet_watchAsset fixed string</p> </li> <li> <p>params: WatchAssetParams, the specific parameters are as follows:</p> </li> <li> <p>type: Only 'trc10', 'trc20', 'trc721' are supported now</p> </li> <li> <p>options:</p> </li> <li> <p>address: the contract address of the token or the token id, required</p> </li> <li> <p>symbol: placeholder (currently unused), optional</p> </li> <li> <p>decimals: placeholder (currently unused), optional</p> </li> <li> <p>image: placeholder (currently unused), optional</p> </li> </ul> <p>Returns</p> <p>This method has no return value</p> <p>Interaction</p> <p>Add TRC10 assets</p> <pre><code>\n    if (window.tronLink.ready) {\n      const tronweb = tronLink.tronWeb;\n      try {\n        tronweb.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'trc10',\n            options: {\n              address: '1002000'\n            },\n          },\n        });\n      } catch (e) {}\n    }\n</code></pre> <p>When the code is executed, a TronLink pop-up window for adding TRC10 assets will show up, and the user can click \u201cAdd\u201d or \u201cCancel\u201d. </p> <p>After clicking \"Add\", users can see the added assets as shown in the following screen:</p> <p></p> <p>Add TRC20 assets</p> <pre><code>\n    if (window.tronLink.ready) {\n      const tronweb = tronLink.tronWeb;\n      try {\n        tronweb.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'trc20',\n            options: {\n              address: 'TF17BgPaZYbz8oxbjhriubPDsA7ArKoLX3'\n            },\n          },\n        });\n      } catch (e) {}\n    }\n</code></pre> <p>When the code is executed, a TronLink pop-up window for adding TRC20 assets will show up, and the user can click \u201cAdd\u201d or \u201cCancel\u201d. </p> <p>After clicking \u201cAdd\u201d, users can see the added assets as shown in the following screen: </p> <p>Add TRC721 asset</p> <pre><code>    if (window.tronLink.ready) {\n      const tronweb = tronLink.tronWeb;\n      try {\n        tronweb.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'trc721',\n            options: {\n              address: 'TVtaUnsgKXhTfqSFRnHCsSXzPiXmm53nZt'\n            },\n          },\n        });\n      } catch (e) {}\n    }\n</code></pre> <p>When the code is executed, a TronLink pop-up window for adding TRC721 will show up, and the user can click \u201cAdd\u201d or \u201cCancel\u201d. </p> <p>After clicking \u201cAdd\u201d, users can see the added assets as shown in the following screen: </p>"},{"location":"plugin-wallet/active-requests/connect-website/","title":"Connect Website","text":"<p>DEPRECATED The methods in this section are deprecated and are expected to be removed in a few releases. The TRON community is discussing new specifications, you can go to TRON-TIP to participate in the discussion.</p> <p>Connect Website</p> <p>Overview</p> <p>TronLink supports TRX transfers, contract signature, authorization, etc. initiated by DApps. For security considerations, users are required to authorize the DApp to \u201cconnect website\u201d. They can take further actions only after successful authorization. The DApp must first connect to the website, and wait for the user's permission before it can initiate a request for authorization.</p> <p>Specification</p> <p>Example</p> <pre><code>    const res = await tronWeb.request(\n      {\n        method: 'tron_requestAccounts',\n        params: {\n          websiteIcon: '&lt;WEBSITE ICON URI&gt;',\n          websiteName: '&lt;WEBSITE NAME&gt;',\n        },\n      }\n    )\n</code></pre> <p>Parameters</p> <pre><code>\n\n    interface RequestAccountsParams {\n      websiteIcon?: string;\n      websiteName?: string;\n    }\n``\n**Returns**\n\n```shell\n\n\n    interface ReqestAccountsResponse {\n      code: 200 | 4000 | 4001,\n      message: string\n    }\n</code></pre> <p>Error Code</p> <p>Description</p> <p>Message</p> <p>null</p> <p>Wallet is locked</p> <p>Empty string</p> <p>200</p> <p>The site has previously been allowed to connect</p> <p>The site is already in the whitelist</p> <p>200</p> <p>The user approved the connection</p> <p>User allowed the request.</p> <p>4000</p> <p>The same DApp has already initiated a request to connect to the website, and the pop-up window has not been closed</p> <p>Authorization requests are being processed, please do not resubmit</p> <p>4001</p> <p>The user rejected connection</p> <p>User rejected the request</p> <p>Interaction</p> <p>After triggering \u2018tron_requestAccounts\u2018, there will be a pop-up window asking for confirmation: </p> <p>PreviousRequest TronLink ExtensionNextAdd Token</p>"},{"location":"plugin-wallet/passive-messages/account-change/","title":"Account Change Message","text":"<p>Message ID: <code>accountsChanged</code></p> <p>Overview</p> <p>This message is generated when:</p> <ol> <li> <p>Users log in</p> </li> <li> <p>Users switch accounts</p> </li> <li> <p>Users lock accounts</p> </li> <li> <p>The wallet is automatically locked after timeout</p> </li> </ol> <p>Specification</p> <p>Example</p> <pre><code>\n\n    window.addEventListener('message', function (e) {\n      if (e.data.message &amp;&amp; e.data.message.action === \"accountsChanged\") {\n        // handler logic\n        console.log('got accountsChanged event', e.data)\n      }\n    })\n</code></pre> <p>Returns</p> <pre><code>\n\n    interface MessageEventAccountsChangedData {\n      isTronLink: boolean;\n      message: {\n        action: string;\n        data: {\n          address: string | boolean;\n        }\n      }\n    }\n</code></pre> <p>Return value example</p> <ol> <li>When users log in, the content of the message body is:</li> </ol> <pre><code>\n\n    {\n      \"data\": {\n        \"address\": \"TZ5XixnRyraxJJy996Q1sip85PHWuj4793\" // Last selected account address\n      }\n    }\n</code></pre> <ol> <li>When users switch accounts, the content of the message body is:</li> </ol> <pre><code>\n\n    {\n      \"data\": {\n        \"address\": \"TRKb2nAnCBfwxnLxgoKJro6VbyA6QmsuXq\" // Newly selected account address\n      }\n    }\n</code></pre> <ol> <li>When users lock accounts and the wallet is automatically locked due to timeout, the message body content is:</li> </ol> <pre><code>\n\n    {\n      \"data\": {\n        \"address\": false\n      }\n    }\n</code></pre>"},{"location":"plugin-wallet/passive-messages/connect-success/","title":"Successful connection message","text":"<p>Message ID: <code>connect</code></p> <p>Overview</p> <p>Developers can monitor this message for connection changes. This message is generated when:</p> <ol> <li> <p>The DApp requests a connection, and the user confirms the connection in the pop-up window</p> </li> <li> <p>Users connect to the website</p> </li> </ol> <p>Specification</p> <p>Example</p> <pre><code>\n\n    window.addEventListener('message', function (e) {\n      if (e.data.message &amp;&amp; e.data.message.action == \"connect\") {\n        // handler logic\n        console.log('got connect event', e.data)\n      }\n    })\n</code></pre>"},{"location":"plugin-wallet/passive-messages/deprecated-messages/","title":"Messages to Be Deprecated","text":"<ol> <li> <p>The user rejects connection: \u201crejectWeb\u201d</p> </li> <li> <p>The user disconnects from the website: \u201cdisconnectWeb\u201d</p> </li> <li> <p>The user accepts connection: \u201cacceptWeb\u201d</p> </li> <li> <p>The user requests to connect to the website: \u201cconnectWeb\u201d</p> </li> </ol>"},{"location":"plugin-wallet/passive-messages/disconnect/","title":"Disconnect website message","text":"<p>Message ID: <code>disconnect</code></p> <p>Overview</p> <p>Developers can monitor this message for connection changes. This message is generated when:</p> <ol> <li> <p>The DApp requests a connection, and the user rejects the connection in the pop-up window</p> </li> <li> <p>Users disconnect from the website</p> </li> </ol> <p>Specification</p> <p>Example</p> <pre><code>\n\n    window.addEventListener('message', function (e) {\n      if (e.data.message &amp;&amp; e.data.message.action == \"disconnect\") {\n        // handler logic\n        console.log('got connect event', e.data)\n      }\n    })\n</code></pre>"},{"location":"plugin-wallet/passive-messages/network-change/","title":"Network Change Message","text":"<p>Message ID: <code>setNode</code></p> <p>Overview</p> <p>Developers can monitor this message to know network changes This message is generated when:</p> <ol> <li>When the user changes the network</li> </ol> <p>Specification</p> <p>Example</p> <pre><code>\n\n    window.addEventListener('message', function (e) {\n      if (e.data.message &amp;&amp; e.data.message.action == \"setNode\") {\n        // handler logic\n        console.log('got setNode event', e.data)\n      }\n    })\n</code></pre> <p>Returns</p> <pre><code>\n\n    {\n      \"node\": {\n        // Information about the current network\n      },\n      \"connectNode\": {\n        // Node information of DApp chain\n      }\n    }\n</code></pre>"},{"location":"plugin-wallet/passive-messages/deprecated-messages/user-active-connect/","title":"User requests to connect to the website","text":"<p>DEPRECATED Message ID: <code>connectWeb</code> This message is generated when:</p> <ol> <li>The user requests to connect to the website. </li> </ol> <p>Developers can get the connection request message by listening to it:</p> <pre><code>    window.addEventListener('message', function (e) {\n      if (e.data.message &amp;&amp; e.data.message.action == \"connectWeb\") {\n        // handler logic\n        console.log('got connectWeb event', e.data)\n      }\n    })\n</code></pre>"},{"location":"plugin-wallet/passive-messages/deprecated-messages/user-confirm-connect/","title":"User accepts connection","text":"<p>DEPRECATED </p> <p>Message ID: <code>acceptWeb</code>  This message is generated when:</p> <ol> <li>The user accepts connection. </li> </ol> <p>Developers can get the connection acceptance message by listening to it:</p> <p>Copy</p> <pre><code>window.addEventListener('message', function (e) {\n  if (e.data.message &amp;&amp; e.data.message.action == \"acceptWeb\") {\n    // handler logic\n    console.log('got acceptWeb event', e.data)\n  }\n})\n</code></pre> <p>PreviousUser disconnects from the websiteNextUser requests to connect to the website</p>"},{"location":"plugin-wallet/passive-messages/deprecated-messages/user-disconnect/","title":"User disconnects from the website","text":"<p>DEPRECATED </p> <p>Message ID: <code>disconnectWeb</code>  This message is generated when:</p> <ol> <li>User actively disconnect from the website. </li> </ol> <p>Developers can get the disconnection message by listening to it:</p> <pre><code>\n\n    window.addEventListener('message', function (e) {\n      if (e.data.message &amp;&amp; e.data.message.action == \"disconnectWeb\") {\n        // handler logic\n        console.log('got disconnectWeb event', e.data)\n      }\n    })\n</code></pre>"},{"location":"plugin-wallet/passive-messages/deprecated-messages/user-reject-connect/","title":"User rejects connection","text":"<p>DEPRECATED </p> <p>Message ID: <code>rejectWeb</code> </p> <p>This message is generated when:</p> <ol> <li>The DApp requests a connection and the user rejects the connection in the pop-up window. </li> </ol> <p>Developers can get the connection rejection message by listening to it:</p> <pre><code>\n\n    window.addEventListener('message', function (e) {\n      if (e.data.message &amp;&amp; e.data.message.action == \"rejectWeb\") {\n        // handler logic\n        console.log('got rejectWeb event', e.data)\n      }\n    })\n</code></pre>"},{"location":"zh/asset_filter_logic/","title":"Asset Filter Logic Documentation","text":""},{"location":"zh/asset_filter_logic/#overview","title":"Overview","text":"<p>This document describes the implementation of asset filtering logic in the TronLink wallet, specifically focusing on the interaction between basic mode, security anti-fraud reminder mode, and asset display settings.</p>"},{"location":"zh/asset_filter_logic/#core-components","title":"Core Components","text":""},{"location":"zh/asset_filter_logic/#1-filter-states","title":"1. Filter States","text":"<ul> <li><code>hideLittleAssets</code>: Controls whether to hide small value assets</li> <li><code>hideScamToken</code>: Controls whether to hide scam tokens</li> </ul>"},{"location":"zh/asset_filter_logic/#2-mode-states","title":"2. Mode States","text":"<ul> <li><code>isBasicMode</code>: Indicates if the wallet is in basic mode</li> <li><code>isAntiCheatOpen</code>: Indicates if security anti-fraud reminder is enabled</li> </ul>"},{"location":"zh/asset_filter_logic/#implementation-details","title":"Implementation Details","text":""},{"location":"zh/asset_filter_logic/#filter-status-management","title":"Filter Status Management","text":""},{"location":"zh/asset_filter_logic/#reading-filter-status","title":"Reading Filter Status","text":"<p>The <code>readHideLittleAssetsFlag()</code> method handles the initialization and updates of filter states: 1. Retrieves saved filter settings from storage 2. Gets current mode status 3. Updates filter states based on mode status 4. Updates UI to reflect current filter states</p>"},{"location":"zh/asset_filter_logic/#filter-state-updates","title":"Filter State Updates","text":"<p>The <code>updateFiltersState()</code> method manages filter state logic: 1. In basic mode:    - Forces <code>hideLittleAssets</code> to false    - Ignores saved small assets hiding setting 2. In non-basic mode:    - Uses saved <code>hideLittleAssets</code> setting 3. For scam token filtering:    - Only applies when anti-fraud reminder is enabled    - Uses saved <code>hideScamToken</code> setting</p>"},{"location":"zh/asset_filter_logic/#mode-change-handling","title":"Mode Change Handling","text":""},{"location":"zh/asset_filter_logic/#basic-mode-changes","title":"Basic Mode Changes","text":"<p>When basic mode is enabled: 1. Switches to user-defined sorting if currently using value-based sorting 2. Updates filter states 3. Refreshes UI</p>"},{"location":"zh/asset_filter_logic/#anti-fraud-mode-changes","title":"Anti-Fraud Mode Changes","text":"<p>When anti-fraud reminder is disabled: 1. Clears saved scam token hiding setting 2. Updates filter states 3. Refreshes UI</p>"},{"location":"zh/asset_filter_logic/#ui-updates","title":"UI Updates","text":"<p>The <code>updateFiltersUI()</code> method: 1. Updates filter indicators in the UI 2. Reflects current filter states to users</p>"},{"location":"zh/asset_filter_logic/#key-methods","title":"Key Methods","text":""},{"location":"zh/asset_filter_logic/#readhidelittleassetsflag","title":"<code>readHideLittleAssetsFlag()</code>","text":"<ul> <li>Purpose: Initialize and update filter states</li> <li>Trigger: Mode changes, app startup</li> <li>Dependencies: Saved settings, current mode status</li> </ul>"},{"location":"zh/asset_filter_logic/#updatefiltersstate","title":"<code>updateFiltersState()</code>","text":"<ul> <li>Purpose: Apply filter logic based on mode</li> <li>Parameters:</li> <li><code>isBasicMode</code>: Basic mode status</li> <li><code>isAntiCheatOpen</code>: Anti-fraud reminder status</li> <li><code>savedHideLittleAssets</code>: Saved small assets hiding setting</li> <li><code>savedHideScamToken</code>: Saved scam token hiding setting</li> </ul>"},{"location":"zh/asset_filter_logic/#handlebasicmodechanged","title":"<code>handleBasicModeChanged()</code>","text":"<ul> <li>Purpose: Handle basic mode state changes</li> <li>Actions:</li> <li>Updates sorting if needed</li> <li>Refreshes filter states</li> </ul>"},{"location":"zh/asset_filter_logic/#handleanticheatchanged","title":"<code>handleAntiCheatChanged()</code>","text":"<ul> <li>Purpose: Handle anti-fraud reminder state changes</li> <li>Actions:</li> <li>Clears scam token settings if disabled</li> <li>Updates filter states</li> </ul>"},{"location":"zh/asset_filter_logic/#state-dependencies","title":"State Dependencies","text":"<ol> <li>Basic Mode Impact:</li> <li>Overrides small assets hiding setting</li> <li> <p>Forces user-defined sorting</p> </li> <li> <p>Anti-Fraud Reminder Impact:</p> </li> <li>Controls scam token filtering</li> <li>Clears settings when disabled</li> </ol>"},{"location":"zh/asset_filter_logic/#ui-integration","title":"UI Integration","text":"<p>The filter states are reflected in the UI through: 1. Filter indicators 2. Asset list display 3. Sorting options</p>"},{"location":"zh/asset_filter_logic/#future-considerations","title":"Future Considerations","text":"<ol> <li>Potential improvements:</li> <li>Add more granular filter controls</li> <li>Implement filter presets</li> <li> <p>Add filter statistics</p> </li> <li> <p>Maintenance points:</p> </li> <li>Monitor filter performance</li> <li>Track user filter preferences</li> <li>Optimize filter update frequency </li> </ol>"},{"location":"zh/hd-wallets/#hd","title":"\u4ec0\u4e48\u662f HD \u94b1\u5305","text":"<p>HD \u94b1\u5305\u662f\u5728 BIP32 \u4e2d\u63d0\u51fa\u7684\u4e3a\u4e86\u907f\u514d\u7ba1\u7406\u4e00\u5806\u79c1\u94a5\u7684\u9ebb\u70e6\u63d0\u51fa\u7684\u5206\u5c42\u63a8\u5bfc\u65b9\u6848\u3002 \u94b1\u5305\u7684\u751f\u6210\u662f\u4ece\u5355\u4e00\u4e2aseed \u4ea7\u751f\u4e00\u4e2a\u6811\u72b6\u7ed3\u6784\u5b58\u50a8\u591a\u7ec4 keypairs(\u79c1\u94a5\u548c\u516c\u94a5)\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8bb0\u5fc6\uff0c\u5c06 seed \u7528\u65b9\u4fbf\u8bb0\u5fc6\u548c\u4e66\u5199\u7684\u5355\u8bcd\u8868\u793a\uff0c\u753112\u4e2a\u5355\u8bcd\u7ec4\u6210\uff0c\u79f0\u4e3a mnemonic code(phrase)\u3002</p>"},{"location":"zh/hd-wallets/#tronlink-hd","title":"TronLink \u94b1\u5305-HD \u94b1\u5305","text":"<p>TronLink \u94b1\u5305\u652f\u6301 BIP32\u3001BIP44 \u534f\u8bae\uff0c\u5e76\u4f9d\u636e BIP44 \u7684\u5206\u5c42\u8def\u5f84\u65b9\u6848\uff0c\u751f\u6210\u5bf9\u5e94\u7684 TRON \u5730\u5740\u3002</p>"},{"location":"zh/","title":"TronLink \u5f00\u53d1\u8005\u6587\u6863","text":"<p>\u6b22\u8fce\u4f7f\u7528 TronLink \u5f00\u53d1\u8005\u6587\u6863\uff01TronLink \u662f\u6ce2\u573a TRON \u751f\u6001\u7684\u53bb\u4e2d\u5fc3\u5316\u94b1\u5305\uff0c\u63d0\u4f9b\u5b8c\u6574\u7684\u5f00\u53d1\u8005\u5de5\u5177\u548c API\u3002</p>"},{"location":"zh/introduction/","title":"\u4ecb\u7ecd","text":"<p>\u6ce2\u573a\u662f\u9075\u5faa\u201c\u8ba9\u4e92\u8054\u7f51\u91cd\u65b0\u53bb\u4e2d\u5fc3\u5316\u201c\u8fd9\u4e00\u4ef7\u503c\u7406\u5ff5\uff0c\u7531\u4f17\u591a\u533a\u5757\u94fe\u6280\u672f\u5f00\u53d1\u8005\u8bbe\u8ba1\u5f00\u53d1\u7684\u5f3a\u5927\u533a\u5757\u94fe\u751f\u6001\u7cfb\u7edf\u3002</p> <p>TronLink \u94b1\u5305\u662f\u94fe\u63a5\u6ce2\u573a TRON \u751f\u6001\u7684\u53bb\u4e2d\u5fc3\u5316\u94b1\u5305\uff0c\u4f7f\u7528\u591a\u5c42\u52a0\u5bc6\u7b97\u6cd5\u672c\u5730\u5b58\u50a8\u79c1\u94a5/\u52a9\u8bb0\u8bcd\uff0c\u786e\u4fdd\u7528\u6237\u6570\u636e\u5b89\u5168\uff1b\u652f\u6301 TRX \u4ee5\u53ca TRC-10\u3001TRC-20\u3001TRC-721 \u5168\u90e8\u5e01\u79cd\uff0c\u670d\u52a1\u5168\u7403\u6ce2\u573a TRON \u7528\u6237\uff1b\u63d0\u4f9b\u5b89\u5168\u7684 DApp \u6d4f\u89c8\u5668\uff0c\u652f\u6301 Tron DApp \u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u3002</p>"},{"location":"zh/dapp/getting-started/","title":"\u5f00\u59cb\u5f00\u53d1","text":"<p>\u672c\u6587\u6863\u5c06\u4ee5\u6700\u7b80\u5355\u6613\u61c2\u7684\u65b9\u5f0f\u6307\u5bfc\u4f60\u7684 DApp \u4e0e TronLink \u5e94\u7528\u7a0b\u5e8f\u76f8\u8fde\u63a5\u3002</p> <p>\u5728DApp\u52a0\u8f7d\u5b8c\u6210\u540e\uff0cTronLink \u4f1a\u5728\u5176\u4e2d\u6ce8\u5165 <code>window.tronLink</code> \u5bf9\u8c61\uff0c</p> <ol> <li> <p>\u5982\u679c\u7528\u6237\u8fde\u63a5\u8fc7\u6b64 DApp\uff0c \u5219\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6<code>tronLink.tronWeb \u3002</code></p> </li> <li> <p>\u5982\u679c\u672a\u8fde\u63a5\u8fc7\uff0c\u5219\u53ef\u4ee5\u8c03\u7528\u8bf7\u6c42\u8fde\u63a5\u540e\u83b7\u53d6\u3002</p> </li> </ol> <pre><code>  async function getTronWeb() {\n    let tronWeb;\n    if (window.tronLink.ready) {\n      tronWeb = tronLink.tronWeb;\n    } else {\n      const res = await tronLink.request({ method: 'tron_requestAccounts' });\n      if (res.code === 200) {\n        tronWeb = tronLink.tronWeb;\n      }\n    }\n    return tronWeb;\n  }\n</code></pre> <p>\u83b7\u53d6 tronWeb \u5b9e\u4f8b\u540e\uff0c\u5373\u53ef\u8fdb\u884c \u8f6c\u8d26\u7b7e\u540d\uff0c\u591a\u7b7e\u7b7e\u540d\uff0c\u6d88\u606f\u7b7e\u540d\u7b49\u94fe\u4e0a\u4ea4\u4e92\u52a8\u4f5c\u3002</p> <p>\u5177\u4f53 tronWeb \u5b9e\u4f8b\u7684\u4f7f\u7528\uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u6587\u6863\uff1a</p> <p>\u53c2\u8003\uff1a</p>"},{"location":"zh/dapp/message-signing/","title":"\u6d88\u606f\u7b7e\u540d","text":"<p>\u7b80\u4ecb</p> <p>DApp \u9700\u8981\u7528\u6237\u5bf9\u4e00\u4e2a hex \u6d88\u606f\u7b7e\u540d\uff0c\u7b7e\u540d\u540e\u6d88\u606f\u8f6c\u53d1\u7ed9\u540e\u7aef\u8fdb\u884c\u9a8c\u7b7e\uff0c\u4ee5\u6b64\u5224\u65ad\u7528\u6237\u5408\u6cd5\u767b\u9646\u3002</p> <p>\u524d\u63d0</p> <p>DApp \u5f00\u53d1\u8005\u5b8c\u6210\u3010\u8fde\u63a5\u7f51\u7ad9\u3011\u8bf7\u6c42\uff0c\u7528\u6237\u540c\u610f\u8fde\u63a5\u3002</p> <p>\u6280\u672f\u89c4\u8303</p> <p>\u4ee3\u7801\u793a\u4f8b</p> <p>Copy</p> <pre><code>if (window.tronLink.ready) {\n  const tronweb = tronLink.tronWeb;\n  try {\n    const message = \"0x01EF\"; // any hex string\n    const signedString = await tronweb.trx.sign(message);\n  } catch (e) {}\n}\n</code></pre> <p>\u53c2\u6570</p> <p><code>tronLink.tronWeb.trx.sign</code>\u63a5\u6536\u4e00\u4e2a\u5341\u516d\u8fdb\u5236\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a\u53c2\u6570\uff0c\u8be5\u5b57\u7b26\u4e32\u8868\u793a\u5f53\u524d\u5f85\u7b7e\u540d\u7684\u5185\u5bb9\u3002</p> <p>\u8fd4\u56de\u503c</p> <p>\u5982\u679c\u7528\u6237\u5728\u5f39\u7a97\u4e2d\u9009\u62e9\u7b7e\u540d, DApp \u53ef\u4ee5\u5f97\u5230\u7b7e\u540d\u540e\u7684\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32, \u6bd4\u5982\uff1a</p> <pre><code>    0xaa302ca153b10dff25b5f00a7e2f603c5916b8f6d78cdaf2122e24cab56ad39a79f60ff3916dde9761baaadea439b567475dde183ee3f8530b4cc76082b29c341c\n</code></pre> <p>\u5982\u679c\u62a5\u9519\uff0c\u5219\u4f1a\u8fd4\u56de\u5982\u4e0b\u4fe1\u606f\uff1a</p> <pre><code>    Uncaught (in promise) Invalid transaction provided\n</code></pre> <p>\u4ea4\u4e92\u6d41\u7a0b</p> <p>\u5f53\u4ee3\u7801\u6267\u884c\u5230<code>await tronweb.trx.sign(message);</code>\u65f6\uff0cTronLink \u94b1\u5305\u4f1a\u63d0\u793a\u5f39\u7a97\uff0c\u9700\u8981\u7528\u6237\u8fdb\u884c\u786e\u8ba4\uff0c \u5982\u4e0b\u56fe, \u5176\u4e2d\u6d88\u606f\u5185\u5bb9\u4f1a\u4ee5hex\u7684\u65b9\u5f0f\u5c55\u793a\uff1a</p> <p></p> <p>\u5982\u679c\u7528\u6237\u5728\u5f39\u7a97\u4e2d\u9009\u62e9\u3010\u62d2\u7edd\u3011\uff0c\u5219\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u5f00\u53d1\u8005\u53ef\u6355\u83b7\u6b64\u5f02\u5e38\u8fdb\u884c\u4e1a\u52a1\u5904\u7406\u3002</p>"},{"location":"zh/dapp/multi-sign-transfer/","title":"\u591a\u7b7e\u8f6c\u8d26","text":"<p>\u7b80\u4ecb</p> <p>\u6b64\u5904\u53ef\u53c2\u8003\u666e\u901a\u8f6c\u8d26</p> <p>\u6280\u672f\u89c4\u8303</p> <p>\u4ee3\u7801\u793a\u4f8b</p> <pre><code>    if (window.tronLink.ready) {\n      const tronweb = tronLink.tronWeb;\n      const toAddress = \"TRKb2nAnCBfwxnLxgoKJro6VbyA6QmsuXq\";\n      const activePermissionId = 2;\n      const tx = await tronweb.transactionBuilder.sendTrx(\n          toAddress, 10, \n          { permissionId: activePermissionId}\n      ); // \u6b65\u9aa41\n      try {\n        const signedTx = await tronweb.trx.multiSign(tx, undefined, activePermissionId); // \u6b65\u9aa42\n        await tronweb.trx.sendRawTransaction(signedTx); // \u6b65\u9aa43\n      } catch (e) {}\n    }\n</code></pre> <p>\u5982\u679c\u7528\u6237\u5728\u5f39\u7a97\u4e2d\u9009\u62e9\u3010\u62d2\u7edd\u3011\uff0c\u5219\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u5f00\u53d1\u8005\u53ef\u6355\u83b7\u6b64\u5f02\u5e38\u8fdb\u884c\u4e1a\u52a1\u5904\u7406\u3002</p> <p>\u5982\u679c\u7528\u6237\u5728\u5f39\u7a97\u4e2d\u9009\u62e9\u3010\u7b7e\u540d\u3011\uff0cDApp \u53ef\u4ee5\u62ff\u5230\u7b7e\u540d\u540e\u7684\u4ea4\u6613\uff0c\u7ee7\u7eed\u8fdb\u884c\u5e7f\u64ad\u3002</p>"},{"location":"zh/dapp/stake2/","title":"Stake2.0","text":"<p>DApp \u751f\u6210\u8d28\u62bc2.0\u4ea4\u6613\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e<code>DelegateResourceContract</code> \u6216\u8005<code>UnDelegateResourceContract</code> \u7c7b\u578b\u7684\u4ea4\u6613\uff0c\u60f3\u8981\u5728\u7b7e\u540d\u65f6\u4f7f\u7528 tronlink \u63d2\u4ef6\u5c55\u793a\u9884\u4f30\u7ed3\u679c\uff0c\u9700\u8981\u5411\u4ea4\u6613\u4f53\u6dfb\u52a0 __options \u5b57\u6bb5\u3002</p> <p>__options \u5185\u90e8\u6709\u4e24\u4e2a\u503c <code>estimatedBandwidth\uff0cestimatedEnergy</code> \uff0c\u5206\u522b\u5bf9\u5e94\u4ee3\u7406\u548c\u56de\u6536\u9884\u4f30\u7684\u80fd\u91cf\u548c\u5e26\u5bbd\u3002</p> <p>\u901a\u8fc7\u975e tronlink \u63d2\u4ef6\u6ce8\u5165\u7684 tronweb \u751f\u6210\u8d28\u62bc2.0\u4ea4\u6613\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e<code>DelegateResourceContract</code> \u6216\u8005<code>UnDelegateResourceContract</code> \u7c7b\u578b\u7684\u4ea4\u6613\u60f3\u8981\u5728\u7b7e\u540d\u65f6\u4f7f\u7528 tronlink \u63d2\u4ef6\u5c55\u793a\u8d44\u6e90\u5bf9\u5e94\u7684\u7c7b\u578b\uff0c\u9700\u8981\u5411\u4ea4\u6613\u4f53\u6dfb\u52a0 resource \u5b57\u6bb5\u3002(\u6dfb\u52a0 resource \u4ec5\u9488\u5bf9\u975e tronlink \u63d2\u4ef6\u6ce8\u5165\u7684 tronweb \uff0c\u4f7f\u7528 tronlink \u63d2\u4ef6\u6ce8\u5165\u7684 tronweb \u4e0d\u9700\u8981\u6dfb\u52a0)\u3002</p> <p>resource \u5bf9\u5e94 <code>'BANDWIDTH'\uff0c'ENERGY'</code>\u3002</p> <p></p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>    const transaction = await tronWeb.transactionBuilder.delegateResource(10e6, 'receiverAddress', 'BANDWIDTH', 'ownerAddress', false);\n    transaction.raw_data.contract[0].parameter.value.resource = \"BANDWIDTH\"\n    transaction.__options = {\"estimatedBandwidth\": 1}\n</code></pre> <p>estimatedEnergy estimatedBandwidth \u7684\u5177\u4f53\u8ba1\u7b97\u903b\u8f91\u89c1Stake 2.0 Adaption FAQ \u6700\u540e\u4e00\u4e2a\u7ae0\u8282\uff1aHow to convert resource share to amount?</p>"},{"location":"zh/dapp/transfer/","title":"\u666e\u901a\u8f6c\u8d26","text":"<p>\u7b80\u4ecb</p> <p>DApp \u9700\u8981\u7528\u6237\u53d1\u8d77\u4e00\u7b14 TRX \u8f6c\u8d26\u3002</p> <p>\u524d\u63d0: DApp \u5f00\u53d1\u8005\u5b8c\u6210\u8fde\u63a5\u7f51\u7ad9\u8bf7\u6c42\uff0c\u7528\u6237\u540c\u610f\u8fde\u63a5\u3002</p> <p>\u6ce2\u573a\u7f51\u7edc\u4e0a\u53d1\u8d77\u8f6c\u8d26\u9700\u89813\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u6784\u9020\u8f6c\u8d26\u4ea4\u6613</p> </li> <li> <p>\u5bf9\u4ea4\u6613\u8fdb\u884c\u7b7e\u540d</p> </li> <li> <p>\u5bf9\u7b7e\u540d\u540e\u7684\u4ea4\u6613\u8fdb\u884c\u5e7f\u64ad</p> </li> </ol> <p>\u5728\u8fd9\u91cc\uff0cTronLink \u4ecb\u5165\u7684\u662f\u7b2c2\u6b65\u7b7e\u540d\u7684\u90e8\u5206\uff0c1, 3 \u4e24\u6b65\u9700\u8981\u5f00\u53d1\u8005\u4f7f\u7528 tronWeb \u5b8c\u6210</p> <p>\u6280\u672f\u89c4\u8303</p> <p>\u4ee3\u7801\u793a\u4f8b</p> <pre><code>    if (window.tronLink.ready) {\n      const tronweb = tronLink.tronWeb;\n      const fromAddress = tronweb.defaultAddress.base58;\n      const toAddress = \"TTSFjEG3Lu9WkHdp4JrWYhbGP6K1REqnGQ\";\n      const tx = await tronweb.transactionBuilder.sendTrx(toAddress, 10, fromAddress); // \u6b65\u9aa41\n      try {\n        const signedTx = await tronweb.trx.sign(tx); // \u6b65\u9aa42\n        await tronweb.trx.sendRawTransaction(signedTx); // \u6b65\u9aa43\n      } catch (e) {\n        // error handling\n      }\n    }\n</code></pre> <p>\u5f53\u4ee3\u7801\u6267\u884c\u5230<code>await tronweb.trx.sign(tx);</code>\u65f6\uff0cTronLink\u94b1\u5305\u4f1a\u63d0\u793a\u5f39\u7a97\uff0c\u9700\u8981\u7528\u6237\u8fdb\u884c\u786e\u8ba4\uff0c\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u5982\u679c\u7528\u6237\u5728\u5f39\u7a97\u4e2d\u9009\u62e9\u3010\u62d2\u7edd\u3011\uff0c\u5219\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u5f00\u53d1\u8005\u53ef\u6355\u83b7\u6b64\u5f02\u5e38\u8fdb\u884c\u4e1a\u52a1\u5904\u7406\u3002</p> <p>\u5982\u679c\u7528\u6237\u5728\u5f39\u7a97\u4e2d\u9009\u62e9\u3010\u7b7e\u540d\u3011\uff0cDApp \u53ef\u4ee5\u62ff\u5230\u7b7e\u540d\u540e\u7684\u4ea4\u6613\uff0c\u7ee7\u7eed\u8fdb\u884c\u5e7f\u64ad\u3002</p>"},{"location":"zh/mobile/asset-management/","title":"\u8d44\u4ea7\u7ba1\u7406","text":"<p>\u7ba1\u7406\u60a8\u7684\u8d44\u4ea7\uff0c\u5e76\u652f\u6301\u81ea\u5b9a\u4e49\u901a\u8bc1</p>"},{"location":"zh/mobile/dapp-support/","title":"DApp\u652f\u6301","text":"<p>\u63d0\u4f9b\u6d41\u7545\u7684 DApp \u6d4f\u89c8\u5668\uff0c\u652f\u6301\u8fd0\u884c TRON DApp\u3002</p>"},{"location":"zh/mobile/deeplink/","title":"DeepLink","text":"<p>DApp\u3001H5\u5e94\u7528\u53ef\u4ee5\u4f7f\u7528 DeepLink \u65b9\u5f0f\u62c9\u8d77 TronLink App \u8fdb\u884c\u6253\u5f00\u94b1\u5305\uff0c\u767b\u5f55\uff0c\u8f6c\u8d26\uff0c\u7b7e\u540d\u4ea4\u6613\uff0c\u5b57\u7b26\u4e32\u7b7e\u540d\uff0c\u5728\u94b1\u5305\u4e2d\u6253\u5f00 DApp \u7b49\u64cd\u4f5c\u3002</p> <p></p> <p>\u64cd\u4f5c\u6d41\u7a0b\u56fe</p> <p>\u6ce8\u610f\uff1a\u53ea\u6709\u5df2\u6dfb\u52a0\u81f3\u767d\u540d\u5355\u7684 dApp \u624d\u80fd\u6210\u529f\u8fde\u63a5\u81f3 TronLink\u3002\u8bf7\u5728\u6b64\u5904\u586b\u5199\u767d\u540d\u5355\u7533\u8bf7\uff1a\u586b\u5199\u8868\u5355</p>"},{"location":"zh/mobile/asset-management/custom-tokens/","title":"\u81ea\u5b9a\u4e49\u901a\u8bc1","text":""},{"location":"zh/mobile/asset-management/custom-tokens/#_1","title":"\u4ec0\u4e48\u662f\u81ea\u5b9a\u4e49\u901a\u8bc1","text":"<p>\u81ea\u5b9a\u4e49\u901a\u8bc1\u529f\u80fd\u53ef\u4ee5\u8ba9\u7528\u6237\u5c06\u90e8\u5206\u672a\u5728 TronScan \u5f55\u5165\u4e3a\u901a\u8bc1\u7684 TRC20\u3001TRC721 \u8d44\u4ea7\uff0c\u5728 TronLink \u94b1\u5305\u4e2d\u624b\u52a8\u6dfb\u52a0\u4e3a\u81ea\u5b9a\u4e49\u901a\u8bc1\uff0c\u4ece\u800c\u5e2e\u52a9\u7528\u6237\u67e5\u627e\u548c\u7ba1\u7406\u8be5\u901a\u8bc1\u8d44\u4ea7\u3002</p>"},{"location":"zh/mobile/asset-management/custom-tokens/#_2","title":"\u6dfb\u52a0\u81ea\u5b9a\u4e49\u901a\u8bc1","text":"<p>\u6dfb\u52a0\uff1a\u9996\u9875--&gt;\u6211\u7684\u5168\u90e8\u8d44\u4ea7--&gt;\u6dfb\u52a0\u81ea\u5b9a\u4e49\u901a\u8bc1</p> <p>\u53ef\u80fd\u7684\u9650\u5236\uff1a\u5728 TronLink \u94b1\u5305\u4e2d\u6dfb\u52a0\u4e3a\u81ea\u5b9a\u4e49\u901a\u8bc1\u540e\uff0c\u90e8\u5206\u5408\u7ea6\u53ef\u80fd\u4f1a\u56e0\u4e3a\u5408\u7ea6\u4ee3\u7801\u4e2d\u7f3a\u5c11\u5173\u952e\u7684 abi\uff0c\u5982\uff1atransfer\u3001approve \u7b49\uff0c\u800c\u5bfc\u81f4\u76f8\u5e94\u7684\u8f6c\u8d26\uff0c\u6388\u6743\u7b49\u64cd\u4f5c\u65e0\u6cd5\u8fdb\u884c\u3002TronLink \u94b1\u5305\u4f1a\u7ed9\u51fa\u5bf9\u5e94\u7684\u63d0\u793a\u3002</p> <p>\u4e0e Tronscan \u540c\u6b65\uff1a\u5982\u679c\u6b64\u81ea\u5b9a\u4e49\u901a\u8bc1\u5728 Tronscan \u5f55\u5165\u540e\uff0cTronLink \u94b1\u5305\u4f1a\u63d0\u793a\u4e0e Tronscan \u540c\u6b65\uff0c\u9009\u62e9\u540c\u6b65\u540e\uff0c\u6b64\u81ea\u5b9a\u4e49\u901a\u8bc1\u4fe1\u606f\u540c\u6b65\u4e3a Tronscan \u5bf9\u5e94\u901a\u8bc1\u4fe1\u606f\u3002</p>"},{"location":"zh/mobile/dapp-support/dapp-browser/","title":"DApp\u6d4f\u89c8\u5668","text":""},{"location":"zh/mobile/dapp-support/dapp-browser/#_1","title":"\u57fa\u672c\u529f\u80fd","text":"<p>DApp \u6d4f\u89c8\u5668\u652f\u6301\u8fd0\u884c TRON DApp\uff0c\u5e76\u81ea\u52a8\u6ce8\u5165 tronWeb \u53ca tronLink \u5bf9\u8c61</p>"},{"location":"zh/mobile/dapp-support/dapp-browser/#_2","title":"\u6269\u5c55","text":"<p>\u5728 DApp \u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u7684 Tron DApp\uff0c\u4f1a\u81ea\u52a8\u6ce8\u5165 iTron \u5bf9\u8c61\uff0c\u5e76\u63d0\u4f9b App \u7aef\u5b9a\u5236\u5316\u529f\u80fd</p> <ul> <li>\u5207\u6362\u5c4f\u5e55\u65b9\u5411</li> </ul> <p>Copy</p> <pre><code>    // url: DApp page url\n    // screenModel: \"1\" -&gt; \u7ad6\u5c4f\uff1b\"2\" -&gt; \u6a2a\u5c4f\n    public void setScreenModel(String url, String screenModel)\n</code></pre>"},{"location":"zh/mobile/dapp-support/integrate-tronlink/","title":"\u96c6\u6210TronLink","text":"<p>TronLink App \u5185\u7f6e DApp \u6d4f\u89c8\u5668\uff0c\u5bf9\u4e8e\u5728\u5176\u4e0a\u8fd0\u884c\u7684 TRON DApp\uff0cTronLink \u4f1a\u81ea\u52a8\u5c06 tronWeb \u53ca tronLink \u5bf9\u8c61\u6ce8\u5165\u5230\u8be5 DApp\u3002\u4ece\u800c\u5141\u8bb8 DApp \u4e0e TronLink App\uff0c\u4ee5\u53caTRON \u7f51\u7edc\u4ea4\u4e92\u3002</p> <p>\u8be6\u60c5\uff1a\u53c2\u8003DApp\u7ae0\u8282</p>"},{"location":"zh/mobile/deeplink/callback-codes/","title":"\u56de\u4f20\u6d88\u606f\u7801","text":"id \u6d88\u606f \u5907\u6ce8 10001 Incorrect JSON format 10002 Missing Action 10003 Unknown Action 10004 Missing ActionId 10005 Incorrect DApp URL format 10006 Incorrect CallbackUrl format 10007 Empty DApp name v1.0 \u53ef\u4ee5\u4e3a\u7a7a 10008 Version number not supported 10009 Current network not supported 10010 The URL is not supported to open TronLink 10011 Unknown SignType 10012 Incorrect Transaction format 10013 Incorrect Method format 10014 Incorrect Message format 10015 Incorrect toAddress 10016 No wallet created in TronLink 10017 Incorrect fromAddress 10018 Incorrect contactAddress 10019 Incorrect chainId 10020 Incorrect amount 10021 The initiating address does not match the current wallet 10022 incorrect loginAddress 10023 System contract not support 10024 Incorrect tokenId 10025 TokenId &amp; Contract address should not be exist together 300 Transaction canceled 301 Transaction executed in TronLink 302 Broadcast failure - returned with incorrect info -1 Unknown reason"},{"location":"zh/mobile/deeplink/login-auth/","title":"\u767b\u9646\u6388\u6743","text":"<p>\u4f7f\u7528Deeplink\u65b9\u5f0f\u5524\u8d77\u94b1\u5305\uff0c\u5e76\u5728\u94b1\u5305\u4e2d\u9009\u62e9\u83b7\u53d6\u94b1\u5305\u5730\u5740</p> <pre><code>    // Tronlink-v4.11.0\n    // \u94fe\u63a5\n    Login/Request Address\n</code></pre> <pre><code>    // param\u7684\u53c2\u6570\u4e3ajson\u683c\u5f0f\u7684\u534f\u8bae\u6570\u636e\n    // \u6ce8\u610f\uff1ajson.toString\u540e\u9700\u8981\u8fdb\u884curlencode\u7f16\u7801\n    {\n      \"url\": \"https://justlend.org/#/home\",\n      \"callbackUrl\": \"http://xxx/api/tron/v1/callback\",\n      \"dappIcon\": \"https://test/icon.png\",\n      \"dappName\": \"Test demo\",\n      \"protocol\": \"TronLink\",\n      \"version\": \"1.0\",\n      \"chainId\": \"0x2b6653dc\",\n      \"action\": \"login\",\n      \"actionId\": \"e5471a9c-b0f1-418b-8634-3de60d68a288\"\n    }\n</code></pre> <pre><code>    {\n      \"actionId\": \"e5471a9c-b0f1-418b-8634-3de60d68a288\",\n      \"address\": \"TSPrmJetAMo6S6RxMd4tswzeRCFVegBNig\",\n      \"code\": 0,\n      \"id\": 1780812177,\n      \"message\": \"success\"\n    }\n</code></pre>"},{"location":"zh/mobile/deeplink/message-signing/","title":"\u6d88\u606f\u7b7e\u540d","text":"<pre><code>    // Tronlink-v4.11.0\n    // \u94fe\u63a5\n    Sign message\n</code></pre> <pre><code>    // request parameter\n    {\n      \"url\": \"https://justlend.org/#/home\",\n      \"callbackUrl\": \"http://3.12.131.175:7777/api/tron/v1/callback\",\n      \"dappIcon\": \"https://test/icon.png\",\n      \"dappName\": \"Test demo\",\n      \"protocol\": \"TronLink\",\n      \"version\": \"1.0\",\n      \"chainId\": \"0x2b6653dc\",\n      \"loginAddress\": \"TSPrmJetAMo6S6RxMd4tswzeRCFVegBNig\",\n      \"signType\": \"signStr\",\n      \"message\": \"abc\",\n      \"action\": \"sign\",\n      \"actionId\": \"50554861-4861-41c4-adf3-abf36213f843\"\n    }\n</code></pre> <pre><code>    // callback parameter\n    {\n      \"actionId\": \"50554861-4861-41c4-adf3-abf36213f843\",\n      \"code\": 0,\n      \"id\": 2001871012,\n      \"message\": \"success\",\n      \"signedData\": \"0xffcac5731d9f70a58e5126f44c34b9356ccb9bef53331e33ddab84bb829adc1b77df24362348f8d46e506b489b4af4496600799b173e708faf1b9db99da9d13c1b\"\n    }\n</code></pre>"},{"location":"zh/mobile/deeplink/open-dapp/","title":"\u6253\u5f00DApp","text":""},{"location":"zh/mobile/deeplink/open-dapp/#deeplink-dapp-dapp","title":"\u4f7f\u7528 DeepLink \u65b9\u5f0f\u5524\u8d77\u94b1\u5305\uff0c\u5e76\u5728 DApp \u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 DApp","text":"<pre><code>    // Tronlink-v4.10.0\n    // \u94fe\u63a5\n    Open DApp\n</code></pre> <pre><code>    // param\u7684\u53c2\u6570\u4e3ajson\u683c\u5f0f\u7684\u534f\u8bae\u6570\u636e\n    // \u6ce8\u610f\uff1ajson.toString\u540e\u9700\u8981\u8fdb\u884curlencode\u7f16\u7801\n    {\n        \"url\": \"https://www.tronlink.org/\", //\u76ee\u6807DApp\n        \"action\": \"open\",\n        \"protocol\": \"tronlink\",\n        \"version\": \"1.0\"\n    }\n</code></pre>"},{"location":"zh/mobile/deeplink/open-wallet/","title":"\u6253\u5f00\u94b1\u5305","text":""},{"location":"zh/mobile/deeplink/open-wallet/#deeplink","title":"\u4f7f\u7528 DeepLink \u65b9\u5f0f\u5524\u8d77\u94b1\u5305","text":"<pre><code>    // Tronlink-v4.10.0\n    // \u94fe\u63a5\n    Open Tronlink\n</code></pre> <pre><code>    // param\u7684\u53c2\u6570\u4e3ajson\u683c\u5f0f\u7684\u534f\u8bae\u6570\u636e\n    // \u6ce8\u610f\uff1ajson.toString\u540e\u9700\u8981\u8fdb\u884curlencode\u7f16\u7801\n    {\n        \"action\": \"open\",\n        \"protocol\": \"tronlink\",\n        \"version\": \"1.0\"\n    }\n</code></pre>"},{"location":"zh/mobile/deeplink/transaction-signing/","title":"\u4ea4\u6613\u7b7e\u540d","text":"<pre><code>    // Tronlink-v4.11.0\n    // \u94fe\u63a5\n    Sign transaction\n</code></pre> <pre><code>    // request parameter\n    {\n      \"url\": \"https://justlend.org/#/home\",\n      \"callbackUrl\": \"http://3.12.131.175:7777/api/tron/v1/callback\",\n      \"dappIcon\": \"https://test/icon.png\",\n      \"dappName\": \"Test demo\",\n      \"protocol\": \"TronLink\",\n      \"version\": \"1.0\",\n      \"chainId\": \"0x2b6653dc\",\n      \"action\": \"sign\",\n      \"loginAddress\": \"TSPrmJetAMo6S6RxMd4tswzeRCFVegBNig\",\n      \"method\": \"transfer(address,uint256)\",\n      \"signType\": \"signTransaction\",\n      \"data\": \"{\\\"visible\\\":false,\\\"txID\\\":\\\"dcfaf2c2d75d91994f9a23623e905eaa7d74bc804fa5821640111ada3441376a\\\",\\\"raw_data\\\":{\\\"contract\\\":[{\\\"parameter\\\":{\\\"value\\\":{\\\"data\\\":\\\"a9059cbb000000000000000000000000ed87a3ae2bf2ab8b95486a23f224487ad75c60200000000000000000000000000000000000000000000000000000000000000014\\\",\\\"owner_address\\\":\\\"41b42b84bad413dde093e27d01bb02ed9eede52c43\\\",\\\"contract_address\\\":\\\"41eca9bc828a3005b9a3b909f2cc5c2a54794de05f\\\"},\\\"type_url\\\":\\\"type.googleapis.com/protocol.TriggerSmartContract\\\"},\\\"type\\\":\\\"TriggerSmartContract\\\"}],\\\"ref_block_bytes\\\":\\\"84e1\\\",\\\"ref_block_hash\\\":\\\"1731d6450e11a03f\\\",\\\"expiration\\\":1670168865000,\\\"fee_limit\\\":100000000,\\\"timestamp\\\":1670168805340},\\\"raw_data_hex\\\":\\\"0a0284e122081731d6450e11a03f40e8d1c9eecd305aae01081f12a9010a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412740a1541b42b84bad413dde093e27d01bb02ed9eede52c43121541eca9bc828a3005b9a3b909f2cc5c2a54794de05f2244a9059cbb000000000000000000000000ed87a3ae2bf2ab8b95486a23f224487ad75c6020000000000000000000000000000000000000000000000000000000000000001470dcffc5eecd30900180c2d72f\\\"}\",\n      \"actionId\": \"64fcdb39-2cfa-47f2-85bd-d7e8409809ed\"\n    }\n</code></pre> <pre><code>    // callback parameter\n    {\n      \"actionId\": \"f5d9791a-c774-4684-805a-83784c0c86ff\",\n      \"code\": 0,\n      \"id\": -799302342,\n      \"message\": \"success\",\n      \"successful\": true,\n      \"transactionHash\": \"2fc49e560f648e5ecb455955d8778267ec1f257436425f62393b632c9a7a55ad\"\n    }\n</code></pre>"},{"location":"zh/mobile/deeplink/transfer/","title":"\u8f6c\u8d26","text":"<p>\u4f7f\u7528DeepLink\u65b9\u5f0f\u5524\u8d77TronLink\uff0c\u5e76\u53d1\u9001\u8f6c\u8d26\u6570\u636e\uff0c\u5728\u94b1\u5305\u4e2d\u8f6c\u8d26\u5e76\u5e7f\u64ad</p> <pre><code>\n    // Tronlink-v4.11.0\n    // \u94fe\u63a5\n    Transfer\n</code></pre> <pre><code>    {\n      \"url\": \"https://justlend.org/#/home\",\n      \"callbackUrl\": \"http://3.12.131.175:7777/api/tron/v1/callback\",\n      \"dappIcon\": \"https://test/icon.png\",\n      \"dappName\": \"Test demo\",\n      \"protocol\": \"TronLink\",\n      \"version\": \"1.0\",\n      \"chainId\": \"0x2b6653dc\",\n      \"memo\": \"Reward\",\n      \"from\": \"TSPrmJetAMo6S6RxMd4tswzeRCFVegBNig\",\n      \"to\": \"TXd9duqtcyyj4pBCKvXKNqmazxxDw5SdBa\",\n      \"loginAddress\": \"TSPrmJetAMo6S6RxMd4tswzeRCFVegBNig\",\n      \"tokenId\": \"0\",\n      \"contract\": \"\",\n      \"amount\": \"20\",\n      \"action\": \"transfer\",\n      \"actionId\": \"408170fc-7919-4459-be5e-05a9d4b4065e\"\n    }\n</code></pre> <pre><code>    {\n      \"actionId\": \"099482f0-ee12-4703-bb7b-2e9d8c7c61a1\",\n      \"code\": 0,\n      \"id\": 1142367107,\n      \"message\": \"success\",\n      \"transactionHash\": \"e8ffe9b92c771e66999732b810bf2493be389464191040d8666a26dc449fa5f0\"\n    }\n</code></pre>"},{"location":"zh/plugin-wallet/passive-messages/","title":"\u88ab\u52a8\u63a5\u6536TronLink\u63d2\u4ef6\u7684\u6d88\u606f","text":"<p>\u6d88\u606f\u4f7f\u7528 window.postMessage \u53d1\u9001\uff0cDapp \u63a5\u6536\u5230\u7684\u5185\u5bb9\u662f\u4e00\u4e2a MessageEvent \uff0c\u53ef\u4ee5\u53c2\u8003MessageEvent\u7684MDN\u6587\u6863\u3002</p>"},{"location":"zh/plugin-wallet/active-requests/add-token/","title":"\u6dfb\u52a0Token","text":"<p>\u7b80\u4ecb</p> <p>DApp \u63d0\u4f9b\u6309\u94ae\u7ed9\u7528\u6237\uff0c \u76f4\u63a5\u5c06\u6307\u5b9a\u7684 Token \u6dfb\u52a0\u5230\u7528\u6237\u63d2\u4ef6\u7684\u8d44\u4ea7\u5c55\u793a\u5217\u8868\u4e2d\u3002</p> <p>\u6280\u672f\u89c4\u8303</p> <p>\u4ee3\u7801\u793a\u4f8b</p> <pre><code>\n    const res = await tronWeb.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'TRC20',\n        options: {\n            address: 'TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t'\n        }\n      },\n    });\n</code></pre> <p>\u53c2\u6570</p> <pre><code>\n    interface WatchAssetParams {\n      type: 'trc10' | 'trc20' | 'trc721';\n      options: {\n        address: string;\n        symbol?: string;\n        decimals?: number;\n        image?: string;\n      }\n    }\n</code></pre> <ul> <li> <p>method: wallet_watchAsset \u56fa\u5b9a\u7684\u5b57\u7b26\u4e32</p> </li> <li> <p>params: WatchAssetParams\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b\uff1a</p> <ul> <li> <p>type: \u76ee\u524d\u53ea\u652f\u6301 'trc10', 'trc20', 'trc721' \u4e09\u79cd</p> </li> <li> <p>options:</p> </li> <li> <p>address: token \u7684\u5408\u7ea6\u5730\u5740 \u6216\u8005 token id, \u5fc5\u4f20</p> </li> <li> <p>symbol: \u5360\u4f4d(\u76ee\u524d\u672a\u4f7f\u7528)\uff0c\u53ef\u9009</p> </li> <li> <p>decimals: \u5360\u4f4d(\u76ee\u524d\u672a\u4f7f\u7528)\uff0c\u53ef\u9009</p> </li> <li> <p>image: \u5360\u4f4d(\u76ee\u524d\u672a\u4f7f\u7528)\uff0c\u53ef\u9009</p> </li> </ul> </li> </ul> <p>\u8fd4\u56de\u503c</p> <p>\u6b64\u65b9\u6cd5\u6ca1\u6709\u8fd4\u56de\u503c</p> <p>\u4ea4\u4e92\u6d41\u7a0b</p> <p>\u6dfb\u52a0 TRC10 \u8d44\u4ea7</p> <pre><code>\n    if (window.tronLink.ready) {\n      const tronweb = tronLink.tronWeb;\n      try {\n        tronweb.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'trc10',\n            options: {\n              address: '1002000'\n            },\n          },\n        });\n      } catch (e) {}\n    }\n</code></pre> <p>\u4ee3\u7801\u6267\u884c\u65f6\uff0cTronLink \u4f1a\u5f39\u51fa\u6dfb\u52a0\u7a97\u53e3\uff0c\u7528\u6237\u70b9\u51fb\u786e\u5b9a\u6dfb\u52a0 TRC10 \u8d44\u4ea7\uff0c\u6216\u8005\u53d6\u6d88\u6dfb\u52a0\u3002</p> <p></p> <p>\u70b9\u51fb\u201c\u6dfb\u52a0\u201d\u6309\u94ae\uff0c\u8d44\u4ea7\u88ab\u6dfb\u52a0\u5230\u8d44\u4ea7\u5217\u8868\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u6dfb\u52a0 TRC20 \u8d44\u4ea7</p> <pre><code>\n    if (window.tronLink.ready) {\n      const tronweb = tronLink.tronWeb;\n      try {\n        tronweb.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'trc20',\n            options: {\n              address: 'TF17BgPaZYbz8oxbjhriubPDsA7ArKoLX3'\n            },\n          },\n        });\n      } catch (e) {}\n    }\n</code></pre> <p>\u4ee3\u7801\u6267\u884c\u65f6\uff0cTronLink \u4f1a\u5f39\u51fa\u6dfb\u52a0\u7a97\u53e3\uff0c\u7528\u6237\u70b9\u51fb\u786e\u5b9a\u6dfb\u52a0 TRC20 \u8d44\u4ea7\uff0c\u6216\u8005\u53d6\u6d88\u6dfb\u52a0\u3002</p> <p></p> <p>\u70b9\u51fb\u201c\u6dfb\u52a0\u201d\u6309\u94ae\uff0c\u8d44\u4ea7\u88ab\u6dfb\u52a0\u5230\u8d44\u4ea7\u5217\u8868\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u6dfb\u52a0 TRC721 \u8d44\u4ea7</p> <pre><code>\n    if (window.tronLink.ready) {\n      const tronweb = tronLink.tronWeb;\n      try {\n        tronweb.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'trc721',\n            options: {\n              address: 'TVtaUnsgKXhTfqSFRnHCsSXzPiXmm53nZt'\n            },\n          },\n        });\n      } catch (e) {}\n    }\n</code></pre> <p>\u4ee3\u7801\u6267\u884c\u65f6\uff0cTronLink \u4f1a\u5f39\u51fa\u6dfb\u52a0\u7a97\u53e3\uff0c\u7528\u6237\u70b9\u51fb\u786e\u5b9a\u6dfb\u52a0 TRC721 \u8d44\u4ea7\uff0c\u6216\u8005\u53d6\u6d88\u6dfb\u52a0\u3002</p> <p></p> <p>\u70b9\u51fb\u201d\u6dfb\u52a0\u201d\u6309\u94ae\uff0c\u8d44\u4ea7\u88ab\u6dfb\u52a0\u5230\u8d44\u4ea7\u5217\u8868\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>Previous\u8fde\u63a5\u7f51\u7ad9Next\u88ab\u52a8\u63a5\u6536TronLink\u63d2\u4ef6\u7684\u6d88\u606f</p>"},{"location":"zh/plugin-wallet/active-requests/connect-website/","title":"\u8fde\u63a5\u7f51\u7ad9","text":""},{"location":"zh/plugin-wallet/active-requests/connect-website/#deprecated","title":"DEPRECATED","text":"<p>\u672c\u5c0f\u8282\u7684\u65b9\u6cd5\u5df2\u5e9f\u5f03\uff0c\u9884\u8ba1\u5c06\u5728\u51e0\u4e2a\u7248\u672c\u540e\u79fb\u9664\u3002TRON \u793e\u533a\u6b63\u5728\u8ba8\u8bba\u65b0\u7684\u89c4\u8303\uff0c\u53ef\u4ee5\u5230 TRON-TIP \u53c2\u4e0e\u8ba8\u8bba\u3002</p>"},{"location":"zh/plugin-wallet/active-requests/connect-website/#_1","title":"\u8fde\u63a5\u7f51\u7ad9","text":"<p>\u7b80\u4ecb</p> <p>TronLink \u63d0\u4f9b\u5916\u90e8\u53d1\u8d77 TRX \u8f6c\u8d26\uff0c\u5408\u7ea6\u7b7e\u540d\uff0c\u6388\u6743\u7b49\u529f\u80fd\uff0c\u57fa\u4e8e\u5b89\u5168\u7684\u8003\u8651\uff0c \u9700\u8981\u7528\u6237\u5728\u5173\u952e\u64cd\u4f5c\u524d\u5148\u5bf9\u53d1\u8d77\u8bf7\u6c42\u7684 DApp \u8fdb\u884c\u3010\u8fde\u63a5\u7f51\u7ad9\u3011\u6388\u6743\uff0c\u5728\u6388\u6743\u6210\u529f\u540e\u624d\u5141\u8bb8\u64cd\u4f5c\u3002 \u6240\u4ee5 DApp \u8981\u5148\u8fdb\u884c\u3010\u8fde\u63a5\u7f51\u7ad9\u3011\u64cd\u4f5c\uff0c\u7b49\u5f85\u7528\u6237\u5141\u8bb8\u540e\uff0c\u65b9\u80fd\u53d1\u8d77\u9700\u8981\u6388\u6743\u7684\u8bf7\u6c42\u3002</p> <p>\u6280\u672f\u89c4\u8303</p> <p>\u4ee3\u7801\u793a\u4f8b</p> <pre><code>\n    const res = await tronWeb.request(\n      {\n        method: 'tron_requestAccounts',\n        params: {\n          websiteIcon: '',\n          websiteName: '',\n        },\n      }\n    );\n</code></pre> <p>\u53c2\u6570</p> <pre><code>\n    interface RequestAccountsParams {\n      websiteIcon?: string;\n      websiteName?: string;\n    }\n</code></pre> <ul> <li> <p>method: tron_requestAccounts \u56fa\u5b9a\u7684\u5b57\u7b26\u4e32</p> </li> <li> <p>params: RequestAccountParams\u7c7b\u578b\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b\uff1a</p> <ul> <li> <p>websiteIcon: DApp \u7f51\u7ad9\u7684\u56fe\u6807\u7684\u7f51\u5740, \u5177\u4f53\u4f1a\u5c55\u793a\u5728\u7528\u6237\u5df2\u8fde\u63a5\u7f51\u7ad9\u5217\u8868\u4e2d</p> </li> <li> <p>websiteName: DApp \u7f51\u7ad9\u540d\u79f0</p> </li> </ul> </li> </ul> <p>\u8fd4\u56de\u503c</p> <p>\u7c7b\u578b\u8bf4\u660e</p> <pre><code>\n    interface ReqestAccountsResponse {\n      code: 200 | 4000 | 4001,\n      message: string\n    }\n</code></pre> <p>\u8fd4\u56de\u7801</p> <p>\u63cf\u8ff0</p> <p>\u8fd4\u56de\u6d88\u606f</p> <p>\u65e0</p> <p>\u94b1\u5305\u5904\u4e8e\u9501\u5b9a\u72b6\u6001</p> <p>\u7a7a\u5b57\u7b26\u4e32</p> <p>200</p> <p>\u7f51\u7ad9\u6b64\u524d\u5df2\u88ab\u7528\u6237\u5141\u8bb8\u8fde\u63a5</p> <p>The site is already in the whitelist</p> <p>200</p> <p>\u7528\u6237\u540c\u610f\u8fde\u63a5</p> <p>User allowed the request.</p> <p>4000</p> <p>\u5f53\u524d\u8bf7\u6c42\u524d\u5df2\u7ecf\u6709\u540c\u4e00\u4e2a DApp \u53d1\u8d77\u4e86\u8fde\u63a5\u7f51\u7ad9\u8bf7\u6c42\uff0c\u5e76\u4e14\u5f39\u7a97\u4ecd\u672a\u5173\u95ed</p> <p>Authorization requests are being processed, please do not resubmit</p> <p>4001</p> <p>\u7528\u6237\u62d2\u7edd\u8fde\u63a5</p> <p>User rejected the request</p> <p>\u4ea4\u4e92\u6d41\u7a0b</p> <p>\u89e6\u53d1<code>tron_requestAccounts</code>\u4e4b\u540e\uff0c\u4f1a\u6253\u5f00\u8fde\u63a5\u786e\u8ba4\u7684\u5f39\u7a97\uff1a</p> <p></p> <p>Previous\u4e3b\u52a8\u8bf7\u6c42TronLink\u63d2\u4ef6\u529f\u80fdNext\u6dfb\u52a0Token</p>"},{"location":"zh/plugin-wallet/passive-messages/account-change/","title":"\u8d26\u6237\u6539\u53d8\u6d88\u606f","text":"<p>\u6d88\u606f\u6807\u8bc6\uff1a <code>accountsChanged</code></p> <p>\u7b80\u4ecb</p> <p>\u4ee5\u4e0b\u60c5\u51b5\u4f1a\u4ea7\u751f\u6b64\u6d88\u606f</p> <ol> <li> <p>\u7528\u6237\u767b\u9646</p> </li> <li> <p>\u7528\u6237\u5207\u6362\u8d26\u53f7</p> </li> <li> <p>\u7528\u6237\u9501\u5b9a\u8d26\u53f7</p> </li> <li> <p>\u94b1\u5305\u8d85\u65f6\u81ea\u52a8\u9501\u5b9a</p> </li> </ol> <p>\u6280\u672f\u89c4\u8303</p> <p>\u4ee3\u7801\u793a\u4f8b</p> <pre><code>\n    window.addEventListener('message', function (e) {\n      if (e.data.message &amp;&amp; e.data.message.action === \"accountsChanged\") {\n          // handler logic\n          console.log('got accountsChanged event', e.data)\n      }\n    })\n</code></pre> <p>\u8fd4\u56de\u503c</p> <pre><code>\n    interface MessageEventAccountsChangedData {\n      isTronLink: boolean;\n      message: {\n        action: string;\n        data: {\n          address: string | boolean;\n        }\n      }\n    }\n</code></pre> <p>\u8fd4\u56de\u503c\u793a\u4f8b</p> <ol> <li>\u7528\u6237\u767b\u9646\u65f6\uff0c\u6d88\u606f\u4f53\u5185\u5bb9\u4e3a\uff1a</li> </ol> <pre><code>\n    {\n      \"data\": {\n        \"address\": \"TZ5XixnRyraxJJy996Q1sip85PHWuj4793\" // \u4e0a\u6b21\u9009\u62e9\u7684\u8d26\u53f7\u5730\u5740\n      }\n    }\n</code></pre> <ol> <li>\u7528\u6237\u5207\u6362\u8d26\u53f7\u65f6\uff0c\u6d88\u606f\u4f53\u5185\u5bb9\u4e3a\uff1a</li> </ol> <pre><code>\n    {\n      \"data\": {\n        \"address\": \"TRKb2nAnCBfwxnLxgoKJro6VbyA6QmsuXq\" // \u65b0\u9009\u62e9\u7684\u8d26\u53f7\u5730\u5740\n      }\n    }\n</code></pre> <ol> <li>\u7528\u6237\u9501\u5b9a\u548c\u94b1\u5305\u8d85\u65f6\u81ea\u52a8\u9501\u5b9a\u65f6\uff0c\u6d88\u606f\u4f53\u5185\u5bb9\u4e3a\uff1a</li> </ol> <pre><code>\n    {\n      \"data\": {\n        \"address\": false\n      }\n    }\n</code></pre>"},{"location":"zh/plugin-wallet/passive-messages/connect-success/","title":"\u8fde\u63a5\u7f51\u7ad9\u6210\u529f\u6d88\u606f","text":"<p>\u6d88\u606f\u6807\u8bc6\uff1a <code>connect</code></p> <p>\u7b80\u4ecb</p> <p>\u5f00\u53d1\u8005\u53ef\u4ee5\u76d1\u542c\u6b64\u6d88\u606f\u6765\u83b7\u53d6\u7f51\u7edc\u7684\u6539\u53d8\u3002</p> <p>\u4ee5\u4e0b\u60c5\u51b5\u4f1a\u4ea7\u751f\u6b64\u6d88\u606f\uff1a</p> <ol> <li> <p>DApp \u8bf7\u6c42\u8fde\u63a5\uff0c\u7528\u6237\u5728\u5f39\u7a97\u4e2d\u786e\u5b9a\u8fde\u63a5\u540e</p> </li> <li> <p>\u7528\u6237\u4e3b\u52a8\u8fde\u63a5\u7f51\u7ad9</p> </li> </ol> <p>\u6280\u672f\u89c4\u8303</p> <p>\u4ee3\u7801\u793a\u4f8b</p> <pre><code>\n    window.addEventListener('message', function (e) {\n      if (e.data.message &amp;&amp; e.data.message.action == \"connect\") {\n          // handler logic\n          console.log('got connect event', e.data)\n      }\n    })\n</code></pre>"},{"location":"zh/plugin-wallet/passive-messages/deprecated-messages/","title":"\u5373\u5c06\u5e9f\u5f03\u7684\u6d88\u606f","text":"<p>\u4ee5\u4e0b\u56db\u4e2a\u6d88\u606f\u5728\u672a\u67654.x\u7248\u672c\u5c06\u4f1a\u88ab\u5e9f\u5f03</p> <ol> <li> <p>\u7528\u6237\u62d2\u7edd\u8fde\u63a5\u6d88\u606f<code>rejectWeb</code></p> </li> <li> <p>\u7528\u6237\u65ad\u8fde\u7f51\u7ad9\u6d88\u606f<code>disconnectWeb</code></p> </li> <li> <p>\u7528\u6237\u786e\u5b9a\u8fde\u63a5\u6d88\u606f<code>acceptWeb</code></p> </li> <li> <p>\u7528\u6237\u4e3b\u52a8\u8fde\u63a5\u7f51\u7ad9\u6d88\u606f<code>connectWeb</code></p> </li> </ol>"},{"location":"zh/plugin-wallet/passive-messages/disconnect/","title":"\u65ad\u5f00\u8fde\u63a5\u7f51\u7ad9\u6d88\u606f","text":"<p>\u6d88\u606f\u6807\u8bc6\uff1a <code>disconnect</code></p> <p>\u7b80\u4ecb</p> <p>\u5f00\u53d1\u8005\u53ef\u4ee5\u76d1\u542c\u6b64\u6d88\u606f\u6765\u83b7\u53d6\u7f51\u7edc\u7684\u6539\u53d8\u3002</p> <p>\u4ee5\u4e0b\u60c5\u51b5\u4f1a\u4ea7\u751f\u6b64\u6d88\u606f\uff1a</p> <ol> <li> <p>DApp \u8bf7\u6c42\u8fde\u63a5\uff0c\u7528\u6237\u5728\u5f39\u7a97\u4e2d\u62d2\u7edd\u8fde\u63a5\u540e</p> </li> <li> <p>\u7528\u6237\u4e3b\u52a8\u65ad\u5f00\u8fde\u63a5\u7f51\u7ad9</p> </li> </ol> <p>\u6280\u672f\u89c4\u8303</p> <p>\u4ee3\u7801\u793a\u4f8b</p> <pre><code>\n    window.addEventListener('message', function (e) {\n      if (e.data.message &amp;&amp; e.data.message.action == \"disconnect\") {\n          // handler logic\n          console.log('got connect event', e.data)\n      }\n    })\n</code></pre>"},{"location":"zh/plugin-wallet/passive-messages/network-change/","title":"\u7f51\u7edc\u6539\u53d8\u6d88\u606f","text":"<p>\u6d88\u606f\u6807\u8bc6\uff1a <code>setNode</code></p> <p>\u7b80\u4ecb</p> <p>\u5f00\u53d1\u8005\u53ef\u4ee5\u76d1\u542c\u6b64\u6d88\u606f\u6765\u83b7\u53d6\u7f51\u7edc\u7684\u6539\u53d8</p> <p>\u4ee5\u4e0b\u60c5\u51b5\u4f1a\u4ea7\u751f\u6b64\u6d88\u606f</p> <ol> <li>\u7528\u6237\u6539\u53d8\u7f51\u7edc\u7684\u65f6\u5019</li> </ol> <p>\u6280\u672f\u89c4\u8303</p> <p>\u4ee3\u7801\u793a\u4f8b</p> <pre><code>\n    window.addEventListener('message', function (e) {\n      if (e.data.message &amp;&amp; e.data.message.action == \"setNode\") {\n          // handler logic\n          console.log('got setNode event', e.data)\n      }\n    })\n</code></pre> <p>\u8fd4\u56de\u503c</p> <pre><code>\n    {\n      \"node\": {\n        // \u5f53\u524d\u7f51\u7edc\u7684\u4fe1\u606f\n      },\n      \"connectNode\": {\n        // dapp chain \u7684\u8282\u70b9\u4fe1\u606f\n      }\n    }\n</code></pre>"},{"location":"zh/plugin-wallet/passive-messages/deprecated-messages/user-active-connect/","title":"\u7528\u6237\u4e3b\u52a8\u8fde\u63a5\u7f51\u7ad9\u6d88\u606f","text":""},{"location":"zh/plugin-wallet/passive-messages/deprecated-messages/user-active-connect/#deprecated","title":"DEPRECATED","text":"<p>\u6d88\u606f\u6807\u8bc6\uff1a <code>connectWeb</code></p> <p>\u4ee5\u4e0b\u60c5\u51b5\u4f1a\u4ea7\u751f\u6b64\u6d88\u606f</p> <ol> <li>\u7528\u6237\u786e\u5b9a\u8fde\u63a5\u6d88\u606f</li> </ol> <p></p> <p>\u5f00\u53d1\u8005\u53ef\u4ee5\u76d1\u542c\u6b64\u6d88\u606f\u6765\u83b7\u53d6\u7528\u6237\u4e3b\u52a8\u8fde\u63a5\u7f51\u7ad9\u6d88\u606f</p> <pre><code>\n    window.addEventListener('message', function (e) {\n      if (e.data.message &amp;&amp; e.data.message.action == \"connectWeb\") {\n          // handler logic\n          console.log('got connectWeb event', e.data)\n      }\n    })\n</code></pre>"},{"location":"zh/plugin-wallet/passive-messages/deprecated-messages/user-confirm-connect/","title":"\u7528\u6237\u786e\u5b9a\u8fde\u63a5\u6d88\u606f","text":""},{"location":"zh/plugin-wallet/passive-messages/deprecated-messages/user-confirm-connect/#deprecated","title":"DEPRECATED","text":"<p>\u6d88\u606f\u6807\u8bc6\uff1a <code>acceptWeb</code></p> <p>\u4ee5\u4e0b\u60c5\u51b5\u4f1a\u4ea7\u751f\u6b64\u6d88\u606f</p> <ol> <li>\u7528\u6237\u786e\u5b9a\u8fde\u63a5\u6d88\u606f</li> </ol> <p></p> <p>\u5f00\u53d1\u8005\u53ef\u4ee5\u76d1\u542c\u6b64\u6d88\u606f\u6765\u83b7\u53d6\u7528\u6237\u786e\u5b9a\u8fde\u63a5\u6d88\u606f</p> <pre><code>\n    window.addEventListener('message', function (e) {\n      if (e.data.message &amp;&amp; e.data.message.action == \"acceptWeb\") {\n          // handler logic\n          console.log('got acceptWeb event', e.data)\n      }\n    })\n</code></pre>"},{"location":"zh/plugin-wallet/passive-messages/deprecated-messages/user-disconnect/","title":"\u7528\u6237\u65ad\u8fde\u7f51\u7ad9\u6d88\u606f","text":""},{"location":"zh/plugin-wallet/passive-messages/deprecated-messages/user-disconnect/#deprecated","title":"DEPRECATED","text":"<p>\u6d88\u606f\u6807\u8bc6\uff1a <code>disconnectWeb</code></p> <p>\u4ee5\u4e0b\u60c5\u51b5\u4f1a\u4ea7\u751f\u6b64\u6d88\u606f</p> <ol> <li>\u7528\u6237\u4e3b\u52a8\u65ad\u63a5\u7f51\u7ad9</li> </ol> <p></p> <p>\u5f00\u53d1\u8005\u53ef\u4ee5\u76d1\u542c\u6b64\u6d88\u606f\u6765\u83b7\u53d6\u7528\u6237\u4e3b\u52a8\u65ad\u8fde\u6d88\u606f</p> <pre><code>\n    window.addEventListener('message', function (e) {\n      if (e.data.message &amp;&amp; e.data.message.action == \"disconnectWeb\") {\n          // handler logic\n          console.log('got disconnectWeb event', e.data)\n      }\n    })\n</code></pre>"},{"location":"zh/plugin-wallet/passive-messages/deprecated-messages/user-reject-connect/","title":"\u7528\u6237\u62d2\u7edd\u8fde\u63a5\u6d88\u606f","text":""},{"location":"zh/plugin-wallet/passive-messages/deprecated-messages/user-reject-connect/#deprecated","title":"DEPRECATED","text":"<p>\u6d88\u606f\u6807\u8bc6\uff1a <code>rejectWeb</code></p> <p>\u4ee5\u4e0b\u60c5\u51b5\u4f1a\u4ea7\u751f\u6b64\u6d88\u606f\uff1a</p> <ol> <li>DApp \u8bf7\u6c42\u8fde\u63a5\uff0c\u7528\u6237\u5728\u5f39\u7a97\u4e2d\u62d2\u7edd\u8fde\u63a5\u540e</li> </ol> <p>/</p> <p>\u5f00\u53d1\u8005\u53ef\u4ee5\u76d1\u542c\u6b64\u6d88\u606f\u6765\u83b7\u53d6\u7528\u6237\u62d2\u7edd\u8fde\u63a5\u6d88\u606f</p> <pre><code>\n    window.addEventListener('message', function (e) {\n      if (e.data.message &amp;&amp; e.data.message.action == \"rejectWeb\") {\n          // handler logic\n          console.log('got rejectWeb event', e.data)\n      }\n    })\n</code></pre>"}]}